{"version":3,"file":"content.bundle.js","mappings":"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","sources":["webpack://notewise/webpack/bootstrap","webpack://notewise/webpack/runtime/define property getters","webpack://notewise/webpack/runtime/hasOwnProperty shorthand","webpack://notewise/webpack/runtime/make namespace object","webpack://notewise/./node_modules/openai/version.mjs","webpack://notewise/./node_modules/openai/_shims/registry.mjs","webpack://notewise/./node_modules/openai/_shims/MultipartBody.mjs","webpack://notewise/./node_modules/openai/_shims/index.mjs","webpack://notewise/./node_modules/openai/_shims/web-runtime.mjs","webpack://notewise/./node_modules/openai/error.mjs","webpack://notewise/./node_modules/openai/streaming.mjs","webpack://notewise/./node_modules/openai/uploads.mjs","webpack://notewise/./node_modules/openai/core.mjs","webpack://notewise/./node_modules/openai/pagination.mjs","webpack://notewise/./node_modules/openai/resource.mjs","webpack://notewise/./node_modules/openai/resources/completions.mjs","webpack://notewise/./node_modules/openai/resources/chat/completions.mjs","webpack://notewise/./node_modules/openai/resources/chat/chat.mjs","webpack://notewise/./node_modules/openai/resources/edits.mjs","webpack://notewise/./node_modules/openai/resources/embeddings.mjs","webpack://notewise/./node_modules/openai/resources/files.mjs","webpack://notewise/./node_modules/openai/resources/images.mjs","webpack://notewise/./node_modules/openai/resources/audio/speech.mjs","webpack://notewise/./node_modules/openai/resources/audio/transcriptions.mjs","webpack://notewise/./node_modules/openai/resources/audio/translations.mjs","webpack://notewise/./node_modules/openai/resources/audio/audio.mjs","webpack://notewise/./node_modules/openai/resources/moderations.mjs","webpack://notewise/./node_modules/openai/resources/models.mjs","webpack://notewise/./node_modules/openai/resources/fine-tuning/jobs.mjs","webpack://notewise/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://notewise/./node_modules/openai/resources/fine-tunes.mjs","webpack://notewise/./node_modules/openai/resources/beta/assistants/files.mjs","webpack://notewise/./node_modules/openai/resources/beta/assistants/assistants.mjs","webpack://notewise/./node_modules/openai/lib/RunnableFunction.mjs","webpack://notewise/./node_modules/openai/lib/chatCompletionUtils.mjs","webpack://notewise/./node_modules/openai/lib/AbstractChatCompletionRunner.mjs","webpack://notewise/./node_modules/openai/lib/ChatCompletionRunner.mjs","webpack://notewise/./node_modules/openai/lib/ChatCompletionStream.mjs","webpack://notewise/./node_modules/openai/index.mjs","webpack://notewise/./node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","webpack://notewise/./node_modules/openai/resources/beta/chat/completions.mjs","webpack://notewise/./node_modules/openai/resources/beta/chat/chat.mjs","webpack://notewise/./node_modules/openai/resources/beta/threads/messages/files.mjs","webpack://notewise/./node_modules/openai/resources/beta/threads/messages/messages.mjs","webpack://notewise/./node_modules/openai/resources/beta/threads/runs/steps.mjs","webpack://notewise/./node_modules/openai/resources/beta/threads/runs/runs.mjs","webpack://notewise/./node_modules/openai/resources/beta/threads/threads.mjs","webpack://notewise/./node_modules/openai/resources/beta/beta.mjs","webpack://notewise/./content.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const VERSION = '4.19.0'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        const data = error;\n        this.error = data;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ? error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status) {\n            return new APIConnectionError({ cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n        this.status = undefined;\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        this.status = undefined;\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 400;\n    }\n}\nexport class AuthenticationError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 401;\n    }\n}\nexport class PermissionDeniedError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 403;\n    }\n}\nexport class NotFoundError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 404;\n    }\n}\nexport class ConflictError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 409;\n    }\n}\nexport class UnprocessableEntityError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 422;\n    }\n}\nexport class RateLimitError extends APIError {\n    constructor() {\n        super(...arguments);\n        this.status = 429;\n    }\n}\nexport class InternalServerError extends APIError {\n}\n//# sourceMappingURL=error.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { APIError } from 'openai/error';\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        const decoder = new SSEDecoder();\n        async function* iterMessages() {\n            if (!response.body) {\n                controller.abort();\n                throw new OpenAIError(`Attempted to iterate over a response with no body`);\n            }\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(response.body);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    const sse = decoder.decode(line);\n                    if (sse)\n                        yield sse;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                const sse = decoder.decode(line);\n                if (sse)\n                    yield sse;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of iterMessages()) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = readableStreamAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n    constructor() {\n        this.buffer = [];\n        this.trailingCR = false;\n    }\n    decode(chunk) {\n        let text = this.decodeText(chunk);\n        if (this.trailingCR) {\n            text = '\\r' + text;\n            this.trailingCR = false;\n        }\n        if (text.endsWith('\\r')) {\n            this.trailingCR = true;\n            text = text.slice(0, -1);\n        }\n        if (!text) {\n            return [];\n        }\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n        if (lines.length === 1 && !trailingNewline) {\n            this.buffer.push(lines[0]);\n            return [];\n        }\n        if (this.buffer.length > 0) {\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n            this.buffer = [];\n        }\n        if (!trailingNewline) {\n            this.buffer = [lines.pop() || ''];\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length && !this.trailingCR) {\n            return [];\n        }\n        const lines = [this.buffer.join('')];\n        this.buffer = [];\n        this.trailingCR = false;\n        return lines;\n    }\n}\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nfunction readableStreamAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options = {}) {\n    // If it's a promise, resolve it.\n    value = await value;\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        return new File([blob], name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    if (contentType?.includes('application/json')) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return json;\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data and the raw `Response` instance.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overridenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overridenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        return null;\n    }\n    buildRequest(options) {\n        const { method, path, query, headers: headers = {} } = options;\n        const body = isMultipartBody(options.body) ? options.body.body\n            : options.body ? JSON.stringify(options.body, null, 2)\n                : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        const timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = {\n            ...(contentLength && { 'Content-Length': contentLength }),\n            ...this.defaultHeaders(options),\n            ...headers,\n        };\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['Content-Type'];\n        }\n        // Strip any headers being explicitly omitted with null\n        Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        this.validateHeaders(reqHeaders, headers);\n        return { req, url, timeout };\n    }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        if (retriesRemaining == null) {\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\n        }\n        const { req, url, timeout } = this.buildRequest(options);\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            debug('response', response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (query) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        return (this.getRequestClient()\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\n            .finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    getRequestClient() {\n        return { fetch: this.fetch };\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        let timeoutMillis;\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader) {\n            const timeoutSeconds = parseInt(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!timeoutMillis ||\n            !Number.isInteger(timeoutMillis) ||\n            timeoutMillis <= 0 ||\n            timeoutMillis > 60 * 1000) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo) {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __binaryResponse: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': Deno.version,\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env] ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env);\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    throw new Error(`Could not find ${header} header`);\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data;\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data;\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data;\n    }\n    getPaginatedItems() {\n        return this.data;\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        if (!this.data?.length) {\n            return null;\n        }\n        const next = this.data[this.data.length - 1]?.id;\n        if (!next)\n            return null;\n        return { params: { after: next } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n(function (Completions) {\n})(Completions || (Completions = {}));\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n(function (Completions) {\n})(Completions || (Completions = {}));\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as CompletionsAPI from 'openai/resources/chat/completions';\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Edits extends APIResource {\n    /**\n     * Creates a new edit for the provided input, instruction, and parameters.\n     *\n     * @deprecated The Edits API is deprecated; please use Chat Completions instead.\n     *\n     * https://openai.com/blog/gpt-4-api-general-availability#deprecation-of-the-edits-api\n     */\n    create(body, options) {\n        return this._client.post('/edits', { body, ...options });\n    }\n}\n(function (Edits) {\n})(Edits || (Edits = {}));\n//# sourceMappingURL=edits.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n(function (Embeddings) {\n})(Embeddings || (Embeddings = {}));\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport { sleep } from 'openai/core';\nimport { APIConnectionTimeoutError } from 'openai/error';\nimport * as FilesAPI from 'openai/resources/files';\nimport { multipartFormRequestOptions } from 'openai/core';\nimport { Page } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints/features. The size of\n     * all the files uploaded by one organization can be up to 100 GB.\n     *\n     * The size of individual files for can be a maximum of 512MB. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) to\n     * learn more about the types of files supported. The Fine-tuning API only supports\n     * `.jsonl` files.\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, { ...options, __binaryResponse: true });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/json', ...options?.headers },\n        });\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileObjectsPage extends Page {\n}\n(function (Files) {\n    Files.FileObjectsPage = FilesAPI.FileObjectsPage;\n})(Files || (Files = {}));\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n(function (Images) {\n})(Images || (Images = {}));\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', { body, ...options, __binaryResponse: true });\n    }\n}\n(function (Speech) {\n})(Speech || (Speech = {}));\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Transcriptions extends APIResource {\n    /**\n     * Transcribes audio into the input language.\n     */\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', multipartFormRequestOptions({ body, ...options }));\n    }\n}\n(function (Transcriptions) {\n})(Transcriptions || (Transcriptions = {}));\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { multipartFormRequestOptions } from 'openai/core';\nexport class Translations extends APIResource {\n    /**\n     * Translates audio into English.\n     */\n    create(body, options) {\n        return this._client.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));\n    }\n}\n(function (Translations) {\n})(Translations || (Translations = {}));\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as SpeechAPI from 'openai/resources/audio/speech';\nimport * as TranscriptionsAPI from 'openai/resources/audio/transcriptions';\nimport * as TranslationsAPI from 'openai/resources/audio/translations';\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\n(function (Audio) {\n    Audio.Transcriptions = TranscriptionsAPI.Transcriptions;\n    Audio.Translations = TranslationsAPI.Translations;\n    Audio.Speech = SpeechAPI.Speech;\n})(Audio || (Audio = {}));\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text violates OpenAI's Content Policy\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n(function (Moderations) {\n})(Moderations || (Moderations = {}));\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as ModelsAPI from 'openai/resources/models';\nimport { Page } from 'openai/pagination';\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\n(function (Models) {\n    Models.ModelsPage = ModelsAPI.ModelsPage;\n})(Models || (Models = {}));\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs';\nimport { CursorPage } from 'openai/pagination';\nexport class Jobs extends APIResource {\n    /**\n     * Creates a job that fine-tunes a specified model from a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\n(function (Jobs) {\n    Jobs.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n    Jobs.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n})(Jobs || (Jobs = {}));\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs';\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\n(function (FineTuning) {\n    FineTuning.Jobs = JobsAPI.Jobs;\n    FineTuning.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\n    FineTuning.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\n})(FineTuning || (FineTuning = {}));\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as FineTunesAPI from 'openai/resources/fine-tunes';\nimport { Page } from 'openai/pagination';\nexport class FineTunes extends APIResource {\n    /**\n     * Creates a job that fine-tunes a specified model from a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/legacy-fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine-tunes', { body, ...options });\n    }\n    /**\n     * Gets info about the fine-tune job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/legacy-fine-tuning)\n     */\n    retrieve(fineTuneId, options) {\n        return this._client.get(`/fine-tunes/${fineTuneId}`, options);\n    }\n    /**\n     * List your organization's fine-tuning jobs\n     */\n    list(options) {\n        return this._client.getAPIList('/fine-tunes', FineTunesPage, options);\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuneId, options) {\n        return this._client.post(`/fine-tunes/${fineTuneId}/cancel`, options);\n    }\n    listEvents(fineTuneId, query, options) {\n        return this._client.get(`/fine-tunes/${fineTuneId}/events`, {\n            query,\n            timeout: 86400000,\n            ...options,\n            stream: query?.stream ?? false,\n        });\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FineTunesPage extends Page {\n}\n(function (FineTunes) {\n    FineTunes.FineTunesPage = FineTunesAPI.FineTunesPage;\n})(FineTunes || (FineTunes = {}));\n//# sourceMappingURL=fine-tunes.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Create an assistant file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to an\n     * [assistant](https://platform.openai.com/docs/api-reference/assistants).\n     */\n    create(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an AssistantFile.\n     */\n    retrieve(assistantId, fileId, options) {\n        return this._client.get(`/assistants/${assistantId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(assistantId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(assistantId, {}, query);\n        }\n        return this._client.getAPIList(`/assistants/${assistantId}/files`, AssistantFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant file.\n     */\n    del(assistantId, fileId, options) {\n        return this._client.delete(`/assistants/${assistantId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class AssistantFilesPage extends CursorPage {\n}\n(function (Files) {\n    Files.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Files || (Files = {}));\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as AssistantsAPI from 'openai/resources/beta/assistants/assistants';\nimport * as FilesAPI from 'openai/resources/beta/assistants/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Assistants extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\n(function (Assistants) {\n    Assistants.AssistantsPage = AssistantsAPI.AssistantsPage;\n    Assistants.Files = FilesAPI.Files;\n    Assistants.AssistantFilesPage = FilesAPI.AssistantFilesPage;\n})(Assistants || (Assistants = {}));\n//# sourceMappingURL=assistants.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_connectedPromise, _AbstractChatCompletionRunner_resolveConnectedPromise, _AbstractChatCompletionRunner_rejectConnectedPromise, _AbstractChatCompletionRunner_endPromise, _AbstractChatCompletionRunner_resolveEndPromise, _AbstractChatCompletionRunner_rejectEndPromise, _AbstractChatCompletionRunner_listeners, _AbstractChatCompletionRunner_ended, _AbstractChatCompletionRunner_errored, _AbstractChatCompletionRunner_aborted, _AbstractChatCompletionRunner_catchingPromiseCreated, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_handleError, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { APIUserAbortError, OpenAIError } from 'openai/error';\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner {\n    constructor() {\n        _AbstractChatCompletionRunner_instances.add(this);\n        this.controller = new AbortController();\n        _AbstractChatCompletionRunner_connectedPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectConnectedPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_endPromise.set(this, void 0);\n        _AbstractChatCompletionRunner_resolveEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_rejectEndPromise.set(this, () => { });\n        _AbstractChatCompletionRunner_listeners.set(this, {});\n        this._chatCompletions = [];\n        this.messages = [];\n        _AbstractChatCompletionRunner_ended.set(this, false);\n        _AbstractChatCompletionRunner_errored.set(this, false);\n        _AbstractChatCompletionRunner_aborted.set(this, false);\n        _AbstractChatCompletionRunner_catchingPromiseCreated.set(this, false);\n        _AbstractChatCompletionRunner_handleError.set(this, (error) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_errored, true, \"f\");\n            if (error instanceof Error && error.name === 'AbortError') {\n                error = new APIUserAbortError();\n            }\n            if (error instanceof APIUserAbortError) {\n                __classPrivateFieldSet(this, _AbstractChatCompletionRunner_aborted, true, \"f\");\n                return this._emit('abort', error);\n            }\n            if (error instanceof OpenAIError) {\n                return this._emit('error', error);\n            }\n            if (error instanceof Error) {\n                const openAIError = new OpenAIError(error.message);\n                // @ts-ignore\n                openAIError.cause = error;\n                return this._emit('error', openAIError);\n            }\n            return this._emit('error', new OpenAIError(String(error)));\n        });\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _AbstractChatCompletionRunner_handleError, \"f\"));\n        }, 0);\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _AbstractChatCompletionRunner_endPromise, \"f\");\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _AbstractChatCompletionRunner_ended, \"f\"))\n            return;\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _AbstractChatCompletionRunner_ended, true, \"f\");\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _AbstractChatCompletionRunner_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _AbstractChatCompletionRunner_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = this.messages[this.messages.length - 1];\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(chatCompletion);\n    }\n    async _runChatCompletion(completions, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(completions, params, options);\n    }\n    async _runFunctions(completions, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(completions, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.tools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            params.tools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(completions, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls)\n                return;\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${tools\n                        .map((f) => JSON.stringify(f.function.name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall)\n                    return;\n            }\n        }\n    }\n}\n_AbstractChatCompletionRunner_connectedPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectConnectedPromise = new WeakMap(), _AbstractChatCompletionRunner_endPromise = new WeakMap(), _AbstractChatCompletionRunner_resolveEndPromise = new WeakMap(), _AbstractChatCompletionRunner_rejectEndPromise = new WeakMap(), _AbstractChatCompletionRunner_listeners = new WeakMap(), _AbstractChatCompletionRunner_ended = new WeakMap(), _AbstractChatCompletionRunner_errored = new WeakMap(), _AbstractChatCompletionRunner_aborted = new WeakMap(), _AbstractChatCompletionRunner_catchingPromiseCreated = new WeakMap(), _AbstractChatCompletionRunner_handleError = new WeakMap(), _AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            return message;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    static runFunctions(completions, params, options) {\n        const runner = new ChatCompletionRunner();\n        runner._run(() => runner._runFunctions(completions, params, options));\n        return runner;\n    }\n    static runTools(completions, params, options) {\n        const runner = new ChatCompletionRunner();\n        runner._run(() => runner._runTools(completions, params, options));\n        return runner;\n    }\n    _addMessage(message) {\n        super._addMessage(message);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_addChunk, _ChatCompletionStream_endRequest, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError } from 'openai/error';\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from 'openai/streaming';\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor() {\n        super(...arguments);\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(completions, params, options) {\n        const runner = new ChatCompletionStream();\n        runner._run(() => runner._runChatCompletion(completions, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(completions, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        const delta = chunk.choices[0]?.delta?.content;\n        const snapshot = completion.choices[0]?.message;\n        if (delta != null && snapshot?.role === 'assistant' && snapshot?.content) {\n            this._emit('content', delta, snapshot.content);\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        return finalizeChatCompletion(snapshot);\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                snapshot.choices[index] = { finish_reason, index, message: delta, ...other };\n                continue;\n            }\n            if (finish_reason)\n                choice.finish_reason = finish_reason;\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, function_call, role, tool_calls } = delta;\n            if (content)\n                choice.message.content = (choice.message.content || '') + content;\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_a = choice.message.function_call).arguments ?? (_a.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn } of tool_calls) {\n                    const tool_call = ((_b = choice.message.tool_calls)[index] ?? (_b[index] = {}));\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments)\n                        tool_call.function.arguments += fn.arguments;\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader(undefined);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve) => readQueue.push(resolve)).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot) {\n    const { id, choices, created, model } = snapshot;\n    return {\n        id,\n        choices: choices.map(({ message, finish_reason, index }) => {\n            if (!finish_reason)\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            const { content = null, function_call, tool_calls } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role)\n                throw new OpenAIError(`missing role for choice ${index}`);\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null)\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                if (!name)\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                return { message: { content, function_call: { arguments: args, name }, role }, finish_reason, index };\n            }\n            if (tool_calls) {\n                return {\n                    index,\n                    finish_reason,\n                    message: {\n                        role,\n                        content,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id } = tool_call;\n                            const { arguments: args, name } = fn || {};\n                            if (id == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            if (type == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            if (name == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            if (args == null)\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            return { id, type, function: { name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return { message: { content: content, role }, finish_reason, index };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n    };\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n//# sourceMappingURL=ChatCompletionStream.mjs.map","// File generated from our OpenAPI spec by Stainless.\nvar _a;\nimport * as Core from \"./core.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from 'openai/resources/index';\n/** API Client for interfacing with the OpenAI API. */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string} [opts.apiKey==process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null} [opts.organization==process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            ...opts,\n            baseURL: opts.baseURL ?? `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.edits = new API.Edits(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.fineTunes = new API.FineTunes(this);\n        this.beta = new API.Beta(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nexport const { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } = Errors;\nexport var toFile = Uploads.toFile;\nexport var fileFromPath = Uploads.fileFromPath;\n(function (OpenAI) {\n    // Helper functions\n    OpenAI.toFile = Uploads.toFile;\n    OpenAI.fileFromPath = Uploads.fileFromPath;\n    OpenAI.Page = Pagination.Page;\n    OpenAI.CursorPage = Pagination.CursorPage;\n    OpenAI.Completions = API.Completions;\n    OpenAI.Chat = API.Chat;\n    OpenAI.Edits = API.Edits;\n    OpenAI.Embeddings = API.Embeddings;\n    OpenAI.Files = API.Files;\n    OpenAI.FileObjectsPage = API.FileObjectsPage;\n    OpenAI.Images = API.Images;\n    OpenAI.Audio = API.Audio;\n    OpenAI.Moderations = API.Moderations;\n    OpenAI.Models = API.Models;\n    OpenAI.ModelsPage = API.ModelsPage;\n    OpenAI.FineTuning = API.FineTuning;\n    OpenAI.FineTunes = API.FineTunes;\n    OpenAI.FineTunesPage = API.FineTunesPage;\n    OpenAI.Beta = API.Beta;\n})(OpenAI || (OpenAI = {}));\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static runFunctions(completions, params, options) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._runFunctions(completions, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        }));\n        return runner;\n    }\n    static runTools(completions, params, options) {\n        const runner = new ChatCompletionStreamingRunner();\n        runner._run(() => runner._runTools(completions, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        }));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nexport { ChatCompletionRunner } from 'openai/lib/ChatCompletionRunner';\nimport { ChatCompletionStreamingRunner, } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ChatCompletionStreamingRunner, } from 'openai/lib/ChatCompletionStreamingRunner';\nexport { ParsingFunction, } from 'openai/lib/RunnableFunction';\nimport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport { ChatCompletionStream } from 'openai/lib/ChatCompletionStream';\nexport class Completions extends APIResource {\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client.chat.completions, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client.chat.completions, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client.chat.completions, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client.chat.completions, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client.chat.completions, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as CompletionsAPI from 'openai/resources/beta/chat/completions';\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Files extends APIResource {\n    /**\n     * Retrieves a message file.\n     */\n    retrieve(threadId, messageId, fileId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, messageId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, messageId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages/${messageId}/files`, MessageFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class MessageFilesPage extends CursorPage {\n}\n(function (Files) {\n    Files.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Files || (Files = {}));\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as FilesAPI from 'openai/resources/beta/threads/messages/files';\nimport { CursorPage } from 'openai/pagination';\nexport class Messages extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n    }\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, ThreadMessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class ThreadMessagesPage extends CursorPage {\n}\n(function (Messages) {\n    Messages.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n    Messages.Files = FilesAPI.Files;\n    Messages.MessageFilesPage = FilesAPI.MessageFilesPage;\n})(Messages || (Messages = {}));\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Steps extends APIResource {\n    /**\n     * Retrieves a run step.\n     */\n    retrieve(threadId, runId, stepId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\n(function (Steps) {\n    Steps.RunStepsPage = StepsAPI.RunStepsPage;\n})(Steps || (Steps = {}));\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nimport * as StepsAPI from 'openai/resources/beta/threads/runs/steps';\nimport { CursorPage } from 'openai/pagination';\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    /**\n     * Create a run.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * When a run has the `status: \"requires_action\"` and `required_action.type` is\n     * `submit_tool_outputs`, this endpoint can be used to submit the outputs from the\n     * tool calls once they're all completed. All outputs must be submitted in a single\n     * request.\n     */\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\nexport class RunsPage extends CursorPage {\n}\n(function (Runs) {\n    Runs.RunsPage = RunsAPI.RunsPage;\n    Runs.Steps = StepsAPI.Steps;\n    Runs.RunStepsPage = StepsAPI.RunStepsPage;\n})(Runs || (Runs = {}));\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport { isRequestOptions } from 'openai/core';\nimport * as MessagesAPI from 'openai/resources/beta/threads/messages/messages';\nimport * as RunsAPI from 'openai/resources/beta/threads/runs/runs';\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n    /**\n     * Create a thread and run it in one request.\n     */\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v1', ...options?.headers },\n        });\n    }\n}\n(function (Threads) {\n    Threads.Runs = RunsAPI.Runs;\n    Threads.RunsPage = RunsAPI.RunsPage;\n    Threads.Messages = MessagesAPI.Messages;\n    Threads.ThreadMessagesPage = MessagesAPI.ThreadMessagesPage;\n})(Threads || (Threads = {}));\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless.\nimport { APIResource } from 'openai/resource';\nimport * as AssistantsAPI from 'openai/resources/beta/assistants/assistants';\nimport * as ChatAPI from 'openai/resources/beta/chat/chat';\nimport * as ThreadsAPI from 'openai/resources/beta/threads/threads';\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\n(function (Beta) {\n    Beta.Chat = ChatAPI.Chat;\n    Beta.Assistants = AssistantsAPI.Assistants;\n    Beta.AssistantsPage = AssistantsAPI.AssistantsPage;\n    Beta.Threads = ThreadsAPI.Threads;\n})(Beta || (Beta = {}));\n//# sourceMappingURL=beta.mjs.map","import OpenAI from 'openai';\n\nconst openai = new OpenAI({\n  apiKey: process.env.API_KEY,\n  dangerouslyAllowBrowser: true,\n});\n/*\nfunction CreateOverlayBox() {\n  console.log(\"made it to overlay box\")\n  const overlay = document.createElement('div');\n  overlay.id = 'custom-overlay';\n  overlay.style.position = 'fixed';\n  overlay.style.top = '0';\n  overlay.style.left = '0';\n  overlay.style.width = '100%';\n  overlay.style.height = '100%';\n  overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\n  overlay.style.zIndex = '9999';\n  overlay.style.display = 'flex';\n  overlay.style.justifyContent = 'center';\n  overlay.style.alignItems = 'center';\n\n  document.body.appendChild(overlay);\n}\nchrome.runtime.onConnect.addListener(function(port) {\n  port.onMessage.addListener(function(message) {\n    if (message.action === 'createOverlay') {\n      createOverlayBox();\n    }\n  });\n});\n*/\nconst paragraphArray = [];\n\nfunction getText() {\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n    const tab = tabs[0];\n    const tabURL = tab.url;\n\n    fetch(tabURL)\n      .then((response) => response.text())\n      .then((html) => {\n        parseHTML(html);\n      });\n\n    function parseHTML(html) {\n      const parser = new DOMParser();\n      const doc = parser.parseFromString(html, 'text/html');\n\n      const paragraphs = doc.querySelectorAll('p, td, ul, h1, h2, h3');\n\n      paragraphs.forEach((paragraph) => {\n        paragraphArray.push(paragraph.textContent);\n      });\n\n      // Send the paragraphs to the OpenAI API for summarization\n      let textToSummarize = \"Please provide a concise summary of the core information of the following, ignore any links provided you are acting as a summary tool in a browser extension: \" + paragraphArray.join('\\n'); // Concatenate paragraphs\n\n      // Check if the text exceeds the model's maximum token limit \n      if (textToSummarize.split(' ').length > 4096) {\n        // If it's too long, truncate it while preserving meaningful content\n        const maxTokens = 4096; // Max tokens \n        const textArray = textToSummarize.split(' ');\n        textToSummarize = textArray.slice(0, maxTokens).join(' ');\n      }\n      console.log(textToSummarize);\n      // Use the OpenAI Chat Completions API to generate a summary\n      generateSummary(textToSummarize);\n    }\n  });\n}\n\nasync function generateSummary(text) {\n  try {\n    const response = await openai.chat.completions.create({\n      model: 'gpt-4-1106-preview',\n      messages: [\n        { role: 'system', content: 'You are a helpful assistant.' },\n        { role: 'user', content: text },\n      ],\n      max_tokens: 2000,\n    });\n\n    console.log(response)\n\n    if (response.hasOwnProperty('choices') && response.choices.length > 0) {\n      const summary = response.choices[0].message.content;\n      const summaryElement = document.getElementById(\"summary\");\n      console.log(summary);\n     \n      if (summaryElement) {\n        summaryElement.textContent = summary; // Update the 'summary' element with the generated summary\n      } else {\n        console.error('Element with ID \"summary\" not found.');\n      }\n    } else if (response.hasOwnProperty('error')) {\n      console.error('Error from OpenAI API:', response.error.message);\n    }\n  } catch (error) {\n    console.error('Error generating summary: ', error);\n  }\n}\n\ndocument.getElementById('myButton').addEventListener('click', function() {\n  console.log('Button clicked');\n  getText();\n  hideButton();\n  showLoader();\n  });\n\ndocument.getElementById('x').addEventListener('click', closeElement);\n\nfunction closeElement() {\n  const element = document.getElementById('x');\n  element.style.display = 'none';\n  window.close();\n}\n\n\n//Button to copy text to clipboard \ndocument.getElementById('copyButton').addEventListener('click', function () {\n  // Get the text content from the 'summary' element\n  var summaryText = document.getElementById('summary').innerText;\n\n  var tempTextarea = document.createElement('textarea');\n  tempTextarea.value = summaryText;\n\n  document.body.appendChild(tempTextarea);\n\n  // Select and copy the text to the clipboard\n  tempTextarea.select();\n  document.execCommand('copy');\n\n  document.body.removeChild(tempTextarea);\n\n  alert('Text copied to clipboard!');\n});\n\n//text to speach \ndocument.getElementById('ttsButton').addEventListener('click', function() {\n  \n  var summaryText =  document.getElementById('summary').innerText;\n  generateSpeech(summaryText);\n});\n\n  async function generateSpeech(text) {\n    try {\n      const response = await openai.audio.speech.create({\n        model: \"tts-1\",\n        voice: \"alloy\",\n        input: text,\n      });\n      if (response.ok) {\n        const audioUrl = URL.createObjectURL(await response.blob());\n        playAudio(audioUrl);\n      } else {\n        console.error('Error from OpenAI API:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error generating speech:', error);\n    }\n  }\n  \n  \n  function playAudio(url) {\n    const audio = new Audio(url);\n    audio.play().catch(e => console.error('Error playing audio:', e));\n  }\n  \n\n\nfunction hideButton() {\n  console.log('Hiding button');\n  var button = document.getElementById('myButton');\n  button.classList.add('hidden');\n}\n\nfunction showLoader() {\n  var loader = document.getElementById('loader');\n  loader.style.display = 'block';\n\n  setTimeout(function () {\n    loader.style.display = 'none';\n  }, 3000); // We need to replace with the actual duration\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  var textSizeInput = document.getElementById('text-size');\n  var testElement = document.getElementById('test');\n\n  textSizeInput.addEventListener('input', function () {\n    testElement.style.fontSize = this.value + \"px\";\n  })\n})\n\nfunction updateFont() {\n  var selector = document.getElementById('font-style');\n  var family = selector.options[selector.selectedIndex].value;\n  var text = document.getElementById('test')\n  text.style.fontFamily = family;\n\n  selector.addEventListener('input')\n}\n\nfunction openNav() {\n  document.getElementById(\"navbar\").style.width = \"250px\";\n}\n\n// Function to close the sliding navbar\nfunction closeNav() {\n  document.getElementById(\"navbar\").style.width = \"0\";\n}\n\n// Event listener for the openNav button\ndocument.getElementById(\"openNav\").addEventListener(\"click\", openNav);\ndocument.getElementById(\"closeNav\").addEventListener(\"click\", closeNav);"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","VERSION","kind","getDefaultAgent","fileFromPath","isFsReadStream","auto","MultipartBody","constructor","body","this","shims","options","Error","fetch","Request","Response","Headers","FormData","Blob","File","ReadableStream","getMultipartRequestOptions","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","error","message","async","form","opts","url","APIError","status","headers","super","makeMessage","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","arguments","Stream","iterator","controller","fromSSEResponse","response","consumed","decoder","SSEDecoder","done","sse","abort","lineDecoder","LineDecoder","iter","readableStreamAsyncIterable","chunk","line","decode","flush","iterMessages","startsWith","event","parse","e","console","raw","name","fromReadableStream","readableStream","iterLines","asyncIterator","tee","left","right","teeIterator","queue","next","length","result","push","shift","toReadableStream","self","encoder","TextEncoder","start","pull","ctrl","close","bytes","encode","enqueue","err","cancel","return","chunks","endsWith","substring","join","fieldname","_","str","delimiter","index","indexOf","partition","buffer","trailingCR","text","decodeText","slice","trailingNewline","NEWLINE_CHARS","has","lines","split","NEWLINE_REGEXP","pop","Buffer","toString","Uint8Array","from","TextDecoder","ArrayBuffer","textDecoder","stream","reader","getReader","read","releaseLock","cancelPromise","Set","isResponseLike","blob","isBlobLike","size","arrayBuffer","toFile","URL","pathname","bits","parts","isView","isAsyncIterableIterator","getOwnPropertyNames","map","p","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","x","String","isMultipartBody","multipartFormRequestOptions","createForm","Promise","all","entries","addFormValue","TypeError","append","lastModified","isFileLike","isUploadable","file","Array","isArray","entry","_AbstractPage_client","defaultParseResponse","props","debug","__binaryResponse","contentType","includes","json","APIPromise","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","withResponse","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","timeout","httpAgent","overridenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","patch","put","method","request","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","buildRequest","query","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","keys","forEach","req","agent","signal","prepareRequest","parseHeaders","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","createResponseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","search","stringifyQuery","filter","encodeURIComponent","init","ms","addEventListener","setTimeout","getRequestClient","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterHeader","timeoutSeconds","parseInt","Number","isNaN","Date","now","isInteger","calculateDefaultRetryTimeoutMillis","sleep","numRetries","Math","min","pow","random","AbstractPage","client","set","receiver","state","f","__classPrivateFieldSet","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","__classPrivateFieldGet","iterPages","page","WeakMap","item","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","every","k","hasOwn","normalizeArch","arch","normalizePlatform","platform","_platformHeaders","Deno","build","os","version","EdgeRuntime","process","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","browser","getBrowserInfo","getPlatformProperties","startsWithSchemeRegexp","RegExp","test","n","readEnv","env","_k","action","args","log","replace","c","r","object","nextPageParams","CursorPage","info","id","after","APIResource","_client","Completions","create","Chat","completions","Edits","Embeddings","Files","retrieve","fileId","list","FileObjectsPage","del","delete","content","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Images","createVariation","edit","Speech","Transcriptions","Translations","transcriptions","translations","speech","Audio","Moderations","Models","model","ModelsPage","Jobs","fineTuningJobId","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","FineTuning","jobs","FineTunes","fineTuneId","FineTunesPage","assistantId","AssistantFilesPage","Assistants","files","update","AssistantsPage","isRunnableFunctionWithParse","fn","isAssistantMessage","role","isFunctionMessage","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_connectedPromise","_AbstractChatCompletionRunner_resolveConnectedPromise","_AbstractChatCompletionRunner_rejectConnectedPromise","_AbstractChatCompletionRunner_endPromise","_AbstractChatCompletionRunner_resolveEndPromise","_AbstractChatCompletionRunner_rejectEndPromise","_AbstractChatCompletionRunner_listeners","_AbstractChatCompletionRunner_ended","_AbstractChatCompletionRunner_errored","_AbstractChatCompletionRunner_aborted","_AbstractChatCompletionRunner_catchingPromiseCreated","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_handleError","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","add","_chatCompletions","messages","_emit","openAIError","reject","_run","executor","_emitFinal","_addChatCompletion","chatCompletion","choices","_addMessage","emit","isToolMessage","function_call","tool_calls","tool_call","function","_connected","ended","errored","on","listener","off","listeners","findIndex","l","splice","once","emitted","finalChatCompletion","completion","finalContent","finalMessage","finalFunctionCall","finalFunctionCallResult","totalUsage","allChatCompletions","some","usage","_createChatCompletion","_runChatCompletion","_runFunctions","restParams","singleFunctionToCall","maxChatCompletions","functionsByName","functions","parameters","description","i","parsed","rawContent","_runTools","tool_choice","tools","t","tool_call_id","WeakSet","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runFunctions","runner","runTools","_ChatCompletionStream_instances","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_addChunk","_ChatCompletionStream_endRequest","_ChatCompletionStream_accumulateChatCompletion","_a","ChatCompletionStream","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","chatId","delta","snapshot","created","finish_reason","finalizeChatCompletion","_b","rest","assign","other","choice","pushQueue","readQueue","bind","ChatCompletionStreamingRunner","chat","threadId","messageId","MessageFilesPage","Messages","ThreadMessagesPage","Steps","runId","stepId","RunStepsPage","Runs","steps","RunsPage","submitToolOutputs","Threads","runs","createAndRun","Beta","assistants","threads","OpenAI","apiKey","organization","dangerouslyAllowBrowser","window","document","edits","embeddings","images","audio","moderations","models","fineTuning","fineTunes","beta","_options","Authorization","OpenAIError","_regeneratorRuntime","a","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","reverse","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","apply","openai","paragraphArray","getText","chrome","tabs","active","currentWindow","tabURL","html","DOMParser","parseFromString","querySelectorAll","paragraph","textContent","textToSummarize","textArray","_x","_generateSummary","generateSummary","parseHTML","_callee","summary","summaryElement","_context","max_tokens","getElementById","t0","_generateSpeech","_callee2","audioUrl","_context2","voice","input","t1","createObjectURL","play","statusText","t2","loader","classList","style","display","summaryText","innerText","tempTextarea","createElement","appendChild","select","execCommand","removeChild","alert","_x2","generateSpeech","textSizeInput","testElement","fontSize","width"],"sourceRoot":""}