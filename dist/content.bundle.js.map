{"version":3,"file":"content.bundle.js","mappings":"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","sources":["webpack://notewise/webpack/bootstrap","webpack://notewise/webpack/runtime/define property getters","webpack://notewise/webpack/runtime/hasOwnProperty shorthand","webpack://notewise/webpack/runtime/make namespace object","webpack://notewise/./node_modules/openai/version.mjs","webpack://notewise/./node_modules/openai/error.mjs","webpack://notewise/./node_modules/openai/streaming.mjs","webpack://notewise/./node_modules/openai/_shims/registry.mjs","webpack://notewise/./node_modules/openai/_shims/MultipartBody.mjs","webpack://notewise/./node_modules/openai/_shims/index.mjs","webpack://notewise/./node_modules/openai/_shims/web-runtime.mjs","webpack://notewise/./node_modules/openai/uploads.mjs","webpack://notewise/./node_modules/openai/core.mjs","webpack://notewise/./node_modules/openai/pagination.mjs","webpack://notewise/./node_modules/openai/resource.mjs","webpack://notewise/./node_modules/openai/resources/completions.mjs","webpack://notewise/./node_modules/openai/resources/chat/completions.mjs","webpack://notewise/./node_modules/openai/resources/chat/chat.mjs","webpack://notewise/./node_modules/openai/resources/edits.mjs","webpack://notewise/./node_modules/openai/resources/embeddings.mjs","webpack://notewise/./node_modules/openai/resources/files.mjs","webpack://notewise/./node_modules/openai/resources/images.mjs","webpack://notewise/./node_modules/openai/resources/audio/transcriptions.mjs","webpack://notewise/./node_modules/openai/resources/audio/translations.mjs","webpack://notewise/./node_modules/openai/resources/audio/audio.mjs","webpack://notewise/./node_modules/openai/resources/moderations.mjs","webpack://notewise/./node_modules/openai/resources/models.mjs","webpack://notewise/./node_modules/openai/resources/fine-tuning/jobs.mjs","webpack://notewise/./node_modules/openai/resources/fine-tuning/fine-tuning.mjs","webpack://notewise/./node_modules/openai/resources/fine-tunes.mjs","webpack://notewise/./node_modules/openai/index.mjs","webpack://notewise/./content.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const VERSION = '4.12.1'; // x-release-please-version\r\n//# sourceMappingURL=version.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { castToError } from \"./core.mjs\";\r\nexport class OpenAIError extends Error {\r\n}\r\nexport class APIError extends OpenAIError {\r\n    constructor(status, error, message, headers) {\r\n        super(`${status} ${APIError.makeMessage(error, message)}`);\r\n        this.status = status;\r\n        this.headers = headers;\r\n        const data = error;\r\n        this.error = data;\r\n        this.code = data?.['code'];\r\n        this.param = data?.['param'];\r\n        this.type = data?.['type'];\r\n    }\r\n    static makeMessage(error, message) {\r\n        return (error?.message ?\r\n            typeof error.message === 'string' ? error.message\r\n                : JSON.stringify(error.message)\r\n            : error ? JSON.stringify(error)\r\n                : message || 'status code (no body)');\r\n    }\r\n    static generate(status, errorResponse, message, headers) {\r\n        if (!status) {\r\n            return new APIConnectionError({ cause: castToError(errorResponse) });\r\n        }\r\n        const error = errorResponse?.['error'];\r\n        if (status === 400) {\r\n            return new BadRequestError(status, error, message, headers);\r\n        }\r\n        if (status === 401) {\r\n            return new AuthenticationError(status, error, message, headers);\r\n        }\r\n        if (status === 403) {\r\n            return new PermissionDeniedError(status, error, message, headers);\r\n        }\r\n        if (status === 404) {\r\n            return new NotFoundError(status, error, message, headers);\r\n        }\r\n        if (status === 409) {\r\n            return new ConflictError(status, error, message, headers);\r\n        }\r\n        if (status === 422) {\r\n            return new UnprocessableEntityError(status, error, message, headers);\r\n        }\r\n        if (status === 429) {\r\n            return new RateLimitError(status, error, message, headers);\r\n        }\r\n        if (status >= 500) {\r\n            return new InternalServerError(status, error, message, headers);\r\n        }\r\n        return new APIError(status, error, message, headers);\r\n    }\r\n}\r\nexport class APIUserAbortError extends APIError {\r\n    constructor({ message } = {}) {\r\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\r\n        this.status = undefined;\r\n    }\r\n}\r\nexport class APIConnectionError extends APIError {\r\n    constructor({ message, cause }) {\r\n        super(undefined, undefined, message || 'Connection error.', undefined);\r\n        this.status = undefined;\r\n        // in some environments the 'cause' property is already declared\r\n        // @ts-ignore\r\n        if (cause)\r\n            this.cause = cause;\r\n    }\r\n}\r\nexport class APIConnectionTimeoutError extends APIConnectionError {\r\n    constructor({ message } = {}) {\r\n        super({ message: message ?? 'Request timed out.' });\r\n    }\r\n}\r\nexport class BadRequestError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 400;\r\n    }\r\n}\r\nexport class AuthenticationError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 401;\r\n    }\r\n}\r\nexport class PermissionDeniedError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 403;\r\n    }\r\n}\r\nexport class NotFoundError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 404;\r\n    }\r\n}\r\nexport class ConflictError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 409;\r\n    }\r\n}\r\nexport class UnprocessableEntityError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 422;\r\n    }\r\n}\r\nexport class RateLimitError extends APIError {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.status = 429;\r\n    }\r\n}\r\nexport class InternalServerError extends APIError {\r\n}\r\n//# sourceMappingURL=error.mjs.map","import { OpenAIError } from \"./error.mjs\";\r\nexport class Stream {\r\n    constructor(response, controller) {\r\n        this.response = response;\r\n        this.controller = controller;\r\n        this.decoder = new SSEDecoder();\r\n    }\r\n    async *iterMessages() {\r\n        if (!this.response.body) {\r\n            this.controller.abort();\r\n            throw new OpenAIError(`Attempted to iterate over a response with no body`);\r\n        }\r\n        const lineDecoder = new LineDecoder();\r\n        const iter = readableStreamAsyncIterable(this.response.body);\r\n        for await (const chunk of iter) {\r\n            for (const line of lineDecoder.decode(chunk)) {\r\n                const sse = this.decoder.decode(line);\r\n                if (sse)\r\n                    yield sse;\r\n            }\r\n        }\r\n        for (const line of lineDecoder.flush()) {\r\n            const sse = this.decoder.decode(line);\r\n            if (sse)\r\n                yield sse;\r\n        }\r\n    }\r\n    async *[Symbol.asyncIterator]() {\r\n        let done = false;\r\n        try {\r\n            for await (const sse of this.iterMessages()) {\r\n                if (done)\r\n                    continue;\r\n                if (sse.data.startsWith('[DONE]')) {\r\n                    done = true;\r\n                    continue;\r\n                }\r\n                if (sse.event === null) {\r\n                    try {\r\n                        yield JSON.parse(sse.data);\r\n                    }\r\n                    catch (e) {\r\n                        console.error(`Could not parse message into JSON:`, sse.data);\r\n                        console.error(`From chunk:`, sse.raw);\r\n                        throw e;\r\n                    }\r\n                }\r\n            }\r\n            done = true;\r\n        }\r\n        catch (e) {\r\n            // If the user calls `stream.controller.abort()`, we should exit without throwing.\r\n            if (e instanceof Error && e.name === 'AbortError')\r\n                return;\r\n            throw e;\r\n        }\r\n        finally {\r\n            // If the user `break`s, abort the ongoing request.\r\n            if (!done)\r\n                this.controller.abort();\r\n        }\r\n    }\r\n}\r\nclass SSEDecoder {\r\n    constructor() {\r\n        this.event = null;\r\n        this.data = [];\r\n        this.chunks = [];\r\n    }\r\n    decode(line) {\r\n        if (line.endsWith('\\r')) {\r\n            line = line.substring(0, line.length - 1);\r\n        }\r\n        if (!line) {\r\n            // empty line and we didn't previously encounter any messages\r\n            if (!this.event && !this.data.length)\r\n                return null;\r\n            const sse = {\r\n                event: this.event,\r\n                data: this.data.join('\\n'),\r\n                raw: this.chunks,\r\n            };\r\n            this.event = null;\r\n            this.data = [];\r\n            this.chunks = [];\r\n            return sse;\r\n        }\r\n        this.chunks.push(line);\r\n        if (line.startsWith(':')) {\r\n            return null;\r\n        }\r\n        let [fieldname, _, value] = partition(line, ':');\r\n        if (value.startsWith(' ')) {\r\n            value = value.substring(1);\r\n        }\r\n        if (fieldname === 'event') {\r\n            this.event = value;\r\n        }\r\n        else if (fieldname === 'data') {\r\n            this.data.push(value);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\r\n * reading lines from text.\r\n *\r\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\r\n */\r\nclass LineDecoder {\r\n    constructor() {\r\n        this.buffer = [];\r\n        this.trailingCR = false;\r\n    }\r\n    decode(chunk) {\r\n        let text = this.decodeText(chunk);\r\n        if (this.trailingCR) {\r\n            text = '\\r' + text;\r\n            this.trailingCR = false;\r\n        }\r\n        if (text.endsWith('\\r')) {\r\n            this.trailingCR = true;\r\n            text = text.slice(0, -1);\r\n        }\r\n        if (!text) {\r\n            return [];\r\n        }\r\n        const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\r\n        let lines = text.split(LineDecoder.NEWLINE_REGEXP);\r\n        if (lines.length === 1 && !trailingNewline) {\r\n            this.buffer.push(lines[0]);\r\n            return [];\r\n        }\r\n        if (this.buffer.length > 0) {\r\n            lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\r\n            this.buffer = [];\r\n        }\r\n        if (!trailingNewline) {\r\n            this.buffer = [lines.pop() || ''];\r\n        }\r\n        return lines;\r\n    }\r\n    decodeText(bytes) {\r\n        if (bytes == null)\r\n            return '';\r\n        if (typeof bytes === 'string')\r\n            return bytes;\r\n        // Node:\r\n        if (typeof Buffer !== 'undefined') {\r\n            if (bytes instanceof Buffer) {\r\n                return bytes.toString();\r\n            }\r\n            if (bytes instanceof Uint8Array) {\r\n                return Buffer.from(bytes).toString();\r\n            }\r\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\r\n        }\r\n        // Browser\r\n        if (typeof TextDecoder !== 'undefined') {\r\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\r\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\r\n                return this.textDecoder.decode(bytes);\r\n            }\r\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\r\n        }\r\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\r\n    }\r\n    flush() {\r\n        if (!this.buffer.length && !this.trailingCR) {\r\n            return [];\r\n        }\r\n        const lines = [this.buffer.join('')];\r\n        this.buffer = [];\r\n        this.trailingCR = false;\r\n        return lines;\r\n    }\r\n}\r\n// prettier-ignore\r\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\r\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\r\nfunction partition(str, delimiter) {\r\n    const index = str.indexOf(delimiter);\r\n    if (index !== -1) {\r\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\r\n    }\r\n    return [str, '', ''];\r\n}\r\n/**\r\n * Most browsers don't yet have async iterable support for ReadableStream,\r\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\r\n *\r\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\r\n */\r\nfunction readableStreamAsyncIterable(stream) {\r\n    if (stream[Symbol.asyncIterator])\r\n        return stream;\r\n    const reader = stream.getReader();\r\n    return {\r\n        async next() {\r\n            try {\r\n                const result = await reader.read();\r\n                if (result?.done)\r\n                    reader.releaseLock(); // release lock when stream becomes closed\r\n                return result;\r\n            }\r\n            catch (e) {\r\n                reader.releaseLock(); // release lock when stream becomes errored\r\n                throw e;\r\n            }\r\n        },\r\n        async return() {\r\n            const cancelPromise = reader.cancel();\r\n            reader.releaseLock();\r\n            await cancelPromise;\r\n            return { done: true, value: undefined };\r\n        },\r\n        [Symbol.asyncIterator]() {\r\n            return this;\r\n        },\r\n    };\r\n}\r\n//# sourceMappingURL=streaming.mjs.map","export let auto = false;\r\nexport let kind = undefined;\r\nexport let fetch = undefined;\r\nexport let Request = undefined;\r\nexport let Response = undefined;\r\nexport let Headers = undefined;\r\nexport let FormData = undefined;\r\nexport let Blob = undefined;\r\nexport let File = undefined;\r\nexport let getMultipartRequestOptions = undefined;\r\nexport let getDefaultAgent = undefined;\r\nexport let fileFromPath = undefined;\r\nexport let isFsReadStream = undefined;\r\nexport function setShims(shims, options = { auto: false }) {\r\n    if (auto) {\r\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\r\n    }\r\n    if (kind) {\r\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\r\n    }\r\n    auto = options.auto;\r\n    kind = shims.kind;\r\n    fetch = shims.fetch;\r\n    Request = shims.Request;\r\n    Response = shims.Response;\r\n    Headers = shims.Headers;\r\n    FormData = shims.FormData;\r\n    Blob = shims.Blob;\r\n    File = shims.File;\r\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\r\n    getDefaultAgent = shims.getDefaultAgent;\r\n    fileFromPath = shims.fileFromPath;\r\n    isFsReadStream = shims.isFsReadStream;\r\n}\r\n//# sourceMappingURL=registry.mjs.map","/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\nexport class MultipartBody {\r\n    constructor(body) {\r\n        this.body = body;\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return 'MultipartBody';\r\n    }\r\n}\r\n//# sourceMappingURL=MultipartBody.mjs.map","/**\r\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\r\n */\r\nimport * as shims from './registry.mjs';\r\nimport * as auto from 'openai/_shims/auto/runtime';\r\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\r\nexport * from './registry.mjs';\r\n","import { MultipartBody } from \"./MultipartBody.mjs\";\r\nexport function getRuntime({ manuallyImported } = {}) {\r\n    const recommendation = manuallyImported ?\r\n        `You may need to use polyfills`\r\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\r\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\r\n- \\`import 'openai/shims/web'\\` (otherwise)\r\n`;\r\n    let _fetch, _Request, _Response, _Headers;\r\n    try {\r\n        // @ts-ignore\r\n        _fetch = fetch;\r\n        // @ts-ignore\r\n        _Request = Request;\r\n        // @ts-ignore\r\n        _Response = Response;\r\n        // @ts-ignore\r\n        _Headers = Headers;\r\n    }\r\n    catch (error) {\r\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\r\n    }\r\n    return {\r\n        kind: 'web',\r\n        fetch: _fetch,\r\n        Request: _Request,\r\n        Response: _Response,\r\n        Headers: _Headers,\r\n        FormData: \r\n        // @ts-ignore\r\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\r\n            // @ts-ignore\r\n            constructor() {\r\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\r\n            }\r\n        }),\r\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\r\n            constructor() {\r\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\r\n            }\r\n        }),\r\n        File: \r\n        // @ts-ignore\r\n        typeof File !== 'undefined' ? File : (class File {\r\n            // @ts-ignore\r\n            constructor() {\r\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\r\n            }\r\n        }),\r\n        getMultipartRequestOptions: async (\r\n        // @ts-ignore\r\n        form, opts) => ({\r\n            ...opts,\r\n            body: new MultipartBody(form),\r\n        }),\r\n        getDefaultAgent: (url) => undefined,\r\n        fileFromPath: () => {\r\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\r\n        },\r\n        isFsReadStream: (value) => false,\r\n    };\r\n}\r\n//# sourceMappingURL=web-runtime.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\r\nexport { fileFromPath } from \"./_shims/index.mjs\";\r\nexport const isResponseLike = (value) => value != null &&\r\n    typeof value === 'object' &&\r\n    typeof value.url === 'string' &&\r\n    typeof value.blob === 'function';\r\nexport const isFileLike = (value) => value != null &&\r\n    typeof value === 'object' &&\r\n    typeof value.name === 'string' &&\r\n    typeof value.lastModified === 'number' &&\r\n    isBlobLike(value);\r\n/**\r\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\r\n * adds the arrayBuffer() method type because it is available and used at runtime\r\n */\r\nexport const isBlobLike = (value) => value != null &&\r\n    typeof value === 'object' &&\r\n    typeof value.size === 'number' &&\r\n    typeof value.type === 'string' &&\r\n    typeof value.text === 'function' &&\r\n    typeof value.slice === 'function' &&\r\n    typeof value.arrayBuffer === 'function';\r\nexport const isUploadable = (value) => {\r\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\r\n};\r\n/**\r\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\r\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\r\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\r\n * @param {Object=} options additional properties\r\n * @param {string=} options.type the MIME type of the content\r\n * @param {number=} options.lastModified the last modified timestamp\r\n * @returns a {@link File} with the given properties\r\n */\r\nexport async function toFile(value, name, options = {}) {\r\n    // If it's a promise, resolve it.\r\n    value = await value;\r\n    if (isResponseLike(value)) {\r\n        const blob = await value.blob();\r\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\r\n        return new File([blob], name, options);\r\n    }\r\n    const bits = await getBytes(value);\r\n    name || (name = getName(value) ?? 'unknown_file');\r\n    if (!options.type) {\r\n        const type = bits[0]?.type;\r\n        if (typeof type === 'string') {\r\n            options = { ...options, type };\r\n        }\r\n    }\r\n    return new File(bits, name, options);\r\n}\r\nasync function getBytes(value) {\r\n    let parts = [];\r\n    if (typeof value === 'string' ||\r\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\r\n        value instanceof ArrayBuffer) {\r\n        parts.push(value);\r\n    }\r\n    else if (isBlobLike(value)) {\r\n        parts.push(await value.arrayBuffer());\r\n    }\r\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\r\n    ) {\r\n        for await (const chunk of value) {\r\n            parts.push(chunk); // TODO, consider validating?\r\n        }\r\n    }\r\n    else {\r\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor?.name}; props: ${propsForError(value)}`);\r\n    }\r\n    return parts;\r\n}\r\nfunction propsForError(value) {\r\n    const props = Object.getOwnPropertyNames(value);\r\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\r\n}\r\nfunction getName(value) {\r\n    return (getStringFromMaybeBuffer(value.name) ||\r\n        getStringFromMaybeBuffer(value.filename) ||\r\n        // For fs.ReadStream\r\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\r\n}\r\nconst getStringFromMaybeBuffer = (x) => {\r\n    if (typeof x === 'string')\r\n        return x;\r\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\r\n        return String(x);\r\n    return undefined;\r\n};\r\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\r\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\r\n/**\r\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\r\n * Otherwise returns the request as is.\r\n */\r\nexport const maybeMultipartFormRequestOptions = async (opts) => {\r\n    if (!hasUploadableValue(opts.body))\r\n        return opts;\r\n    const form = await createForm(opts.body);\r\n    return getMultipartRequestOptions(form, opts);\r\n};\r\nexport const multipartFormRequestOptions = async (opts) => {\r\n    const form = await createForm(opts.body);\r\n    return getMultipartRequestOptions(form, opts);\r\n};\r\nexport const createForm = async (body) => {\r\n    const form = new FormData();\r\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\r\n    return form;\r\n};\r\nconst hasUploadableValue = (value) => {\r\n    if (isUploadable(value))\r\n        return true;\r\n    if (Array.isArray(value))\r\n        return value.some(hasUploadableValue);\r\n    if (value && typeof value === 'object') {\r\n        for (const k in value) {\r\n            if (hasUploadableValue(value[k]))\r\n                return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\nconst addFormValue = async (form, key, value) => {\r\n    if (value === undefined)\r\n        return;\r\n    if (value == null) {\r\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\r\n    }\r\n    // TODO: make nested formats configurable\r\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n        form.append(key, String(value));\r\n    }\r\n    else if (isUploadable(value)) {\r\n        const file = await toFile(value);\r\n        form.append(key, file);\r\n    }\r\n    else if (Array.isArray(value)) {\r\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\r\n    }\r\n    else if (typeof value === 'object') {\r\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\r\n    }\r\n    else {\r\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\r\n    }\r\n};\r\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _AbstractPage_client;\r\nimport { VERSION } from \"./version.mjs\";\r\nimport { Stream } from \"./streaming.mjs\";\r\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\r\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\r\nimport { isMultipartBody } from \"./uploads.mjs\";\r\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\r\nconst MAX_RETRIES = 2;\r\nasync function defaultParseResponse(props) {\r\n    const { response } = props;\r\n    if (props.options.stream) {\r\n        // Note: there is an invariant here that isn't represented in the type system\r\n        // that if you set `stream: true` the response type must also be `Stream<T>`\r\n        return new Stream(response, props.controller);\r\n    }\r\n    const contentType = response.headers.get('content-type');\r\n    if (contentType?.includes('application/json')) {\r\n        const json = await response.json();\r\n        debug('response', response.status, response.url, response.headers, json);\r\n        return json;\r\n    }\r\n    // TODO handle blob, arraybuffer, other content types, etc.\r\n    const text = await response.text();\r\n    debug('response', response.status, response.url, response.headers, text);\r\n    return text;\r\n}\r\n/**\r\n * A subclass of `Promise` providing additional helper methods\r\n * for interacting with the SDK.\r\n */\r\nexport class APIPromise extends Promise {\r\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\r\n        super((resolve) => {\r\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\r\n            // parse the response body; instead .then, .catch, .finally are overridden\r\n            // to parse the response\r\n            resolve(null);\r\n        });\r\n        this.responsePromise = responsePromise;\r\n        this.parseResponse = parseResponse;\r\n    }\r\n    _thenUnwrap(transform) {\r\n        return new APIPromise(this.responsePromise, async (props) => transform(await this.parseResponse(props)));\r\n    }\r\n    /**\r\n     * Gets the raw `Response` instance instead of parsing the response\r\n     * data.\r\n     *\r\n     * If you want to parse the response body but still get the `Response`\r\n     * instance, you can use {@link withResponse()}.\r\n     *\r\n     * 👋 Getting the wrong TypeScript type for `Response`?\r\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\r\n     * or add one of these imports before your first `import … from 'openai'`:\r\n     * - `import 'openai/shims/node'` (if you're running on Node)\r\n     * - `import 'openai/shims/web'` (otherwise)\r\n     */\r\n    asResponse() {\r\n        return this.responsePromise.then((p) => p.response);\r\n    }\r\n    /**\r\n     * Gets the parsed response data and the raw `Response` instance.\r\n     *\r\n     * If you just want to get the raw `Response` instance without parsing it,\r\n     * you can use {@link asResponse()}.\r\n     *\r\n     *\r\n     * 👋 Getting the wrong TypeScript type for `Response`?\r\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\r\n     * or add one of these imports before your first `import … from 'openai'`:\r\n     * - `import 'openai/shims/node'` (if you're running on Node)\r\n     * - `import 'openai/shims/web'` (otherwise)\r\n     */\r\n    async withResponse() {\r\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\r\n        return { data, response };\r\n    }\r\n    parse() {\r\n        if (!this.parsedPromise) {\r\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\r\n        }\r\n        return this.parsedPromise;\r\n    }\r\n    then(onfulfilled, onrejected) {\r\n        return this.parse().then(onfulfilled, onrejected);\r\n    }\r\n    catch(onrejected) {\r\n        return this.parse().catch(onrejected);\r\n    }\r\n    finally(onfinally) {\r\n        return this.parse().finally(onfinally);\r\n    }\r\n}\r\nexport class APIClient {\r\n    constructor({ baseURL, maxRetries, timeout = 600000, // 10 minutes\r\n    httpAgent, fetch: overridenFetch, }) {\r\n        this.baseURL = baseURL;\r\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries ?? MAX_RETRIES);\r\n        this.timeout = validatePositiveInteger('timeout', timeout);\r\n        this.httpAgent = httpAgent;\r\n        this.fetch = overridenFetch ?? fetch;\r\n    }\r\n    authHeaders(opts) {\r\n        return {};\r\n    }\r\n    /**\r\n     * Override this to add your own default headers, for example:\r\n     *\r\n     *  {\r\n     *    ...super.defaultHeaders(),\r\n     *    Authorization: 'Bearer 123',\r\n     *  }\r\n     */\r\n    defaultHeaders(opts) {\r\n        return {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'User-Agent': this.getUserAgent(),\r\n            ...getPlatformHeaders(),\r\n            ...this.authHeaders(opts),\r\n        };\r\n    }\r\n    /**\r\n     * Override this to add your own headers validation:\r\n     */\r\n    validateHeaders(headers, customHeaders) { }\r\n    defaultIdempotencyKey() {\r\n        return `stainless-node-retry-${uuid4()}`;\r\n    }\r\n    get(path, opts) {\r\n        return this.methodRequest('get', path, opts);\r\n    }\r\n    post(path, opts) {\r\n        return this.methodRequest('post', path, opts);\r\n    }\r\n    patch(path, opts) {\r\n        return this.methodRequest('patch', path, opts);\r\n    }\r\n    put(path, opts) {\r\n        return this.methodRequest('put', path, opts);\r\n    }\r\n    delete(path, opts) {\r\n        return this.methodRequest('delete', path, opts);\r\n    }\r\n    methodRequest(method, path, opts) {\r\n        return this.request(Promise.resolve(opts).then((opts) => ({ method, path, ...opts })));\r\n    }\r\n    getAPIList(path, Page, opts) {\r\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\r\n    }\r\n    calculateContentLength(body) {\r\n        if (typeof body === 'string') {\r\n            if (typeof Buffer !== 'undefined') {\r\n                return Buffer.byteLength(body, 'utf8').toString();\r\n            }\r\n            if (typeof TextEncoder !== 'undefined') {\r\n                const encoder = new TextEncoder();\r\n                const encoded = encoder.encode(body);\r\n                return encoded.length.toString();\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    buildRequest(options) {\r\n        const { method, path, query, headers: headers = {} } = options;\r\n        const body = isMultipartBody(options.body) ? options.body.body\r\n            : options.body ? JSON.stringify(options.body, null, 2)\r\n                : null;\r\n        const contentLength = this.calculateContentLength(body);\r\n        const url = this.buildURL(path, query);\r\n        if ('timeout' in options)\r\n            validatePositiveInteger('timeout', options.timeout);\r\n        const timeout = options.timeout ?? this.timeout;\r\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\r\n        const minAgentTimeout = timeout + 1000;\r\n        if (typeof httpAgent?.options?.timeout === 'number' &&\r\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\r\n            // Allow any given request to bump our agent active socket timeout.\r\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\r\n            // and without mutating agent we would need to create more of them.\r\n            // This tradeoff optimizes for performance.\r\n            httpAgent.options.timeout = minAgentTimeout;\r\n        }\r\n        if (this.idempotencyHeader && method !== 'get') {\r\n            if (!options.idempotencyKey)\r\n                options.idempotencyKey = this.defaultIdempotencyKey();\r\n            headers[this.idempotencyHeader] = options.idempotencyKey;\r\n        }\r\n        const reqHeaders = {\r\n            ...(contentLength && { 'Content-Length': contentLength }),\r\n            ...this.defaultHeaders(options),\r\n            ...headers,\r\n        };\r\n        // let builtin fetch set the Content-Type for multipart bodies\r\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\r\n            delete reqHeaders['Content-Type'];\r\n        }\r\n        // Strip any headers being explicitly omitted with null\r\n        Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\r\n        const req = {\r\n            method,\r\n            ...(body && { body: body }),\r\n            headers: reqHeaders,\r\n            ...(httpAgent && { agent: httpAgent }),\r\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\r\n            // not compatible with standard web types\r\n            signal: options.signal ?? null,\r\n        };\r\n        this.validateHeaders(reqHeaders, headers);\r\n        return { req, url, timeout };\r\n    }\r\n    /**\r\n     * Used as a callback for mutating the given `RequestInit` object.\r\n     *\r\n     * This is useful for cases where you want to add certain headers based off of\r\n     * the request properties, e.g. `method` or `url`.\r\n     */\r\n    async prepareRequest(request, { url, options }) { }\r\n    parseHeaders(headers) {\r\n        return (!headers ? {}\r\n            : Symbol.iterator in headers ?\r\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\r\n                : { ...headers });\r\n    }\r\n    makeStatusError(status, error, message, headers) {\r\n        return APIError.generate(status, error, message, headers);\r\n    }\r\n    request(options, remainingRetries = null) {\r\n        return new APIPromise(this.makeRequest(options, remainingRetries));\r\n    }\r\n    async makeRequest(optionsInput, retriesRemaining) {\r\n        const options = await optionsInput;\r\n        if (retriesRemaining == null) {\r\n            retriesRemaining = options.maxRetries ?? this.maxRetries;\r\n        }\r\n        const { req, url, timeout } = this.buildRequest(options);\r\n        await this.prepareRequest(req, { url, options });\r\n        debug('request', url, options, req.headers);\r\n        if (options.signal?.aborted) {\r\n            throw new APIUserAbortError();\r\n        }\r\n        const controller = new AbortController();\r\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\r\n        if (response instanceof Error) {\r\n            if (options.signal?.aborted) {\r\n                throw new APIUserAbortError();\r\n            }\r\n            if (retriesRemaining) {\r\n                return this.retryRequest(options, retriesRemaining);\r\n            }\r\n            if (response.name === 'AbortError') {\r\n                throw new APIConnectionTimeoutError();\r\n            }\r\n            throw new APIConnectionError({ cause: response });\r\n        }\r\n        const responseHeaders = createResponseHeaders(response.headers);\r\n        if (!response.ok) {\r\n            if (retriesRemaining && this.shouldRetry(response)) {\r\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\r\n            }\r\n            const errText = await response.text().catch((e) => castToError(e).message);\r\n            const errJSON = safeJSON(errText);\r\n            const errMessage = errJSON ? undefined : errText;\r\n            debug('response', response.status, url, responseHeaders, errMessage);\r\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\r\n            throw err;\r\n        }\r\n        return { response, options, controller };\r\n    }\r\n    requestAPIList(Page, options) {\r\n        const request = this.makeRequest(options, null);\r\n        return new PagePromise(this, request, Page);\r\n    }\r\n    buildURL(path, query) {\r\n        const url = isAbsoluteURL(path) ?\r\n            new URL(path)\r\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\r\n        const defaultQuery = this.defaultQuery();\r\n        if (!isEmptyObj(defaultQuery)) {\r\n            query = { ...defaultQuery, ...query };\r\n        }\r\n        if (query) {\r\n            url.search = this.stringifyQuery(query);\r\n        }\r\n        return url.toString();\r\n    }\r\n    stringifyQuery(query) {\r\n        return Object.entries(query)\r\n            .filter(([_, value]) => typeof value !== 'undefined')\r\n            .map(([key, value]) => {\r\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\r\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\r\n            }\r\n            if (value === null) {\r\n                return `${encodeURIComponent(key)}=`;\r\n            }\r\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\r\n        })\r\n            .join('&');\r\n    }\r\n    async fetchWithTimeout(url, init, ms, controller) {\r\n        const { signal, ...options } = init || {};\r\n        if (signal)\r\n            signal.addEventListener('abort', () => controller.abort());\r\n        const timeout = setTimeout(() => controller.abort(), ms);\r\n        return (this.getRequestClient()\r\n            // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\r\n            .fetch.call(undefined, url, { signal: controller.signal, ...options })\r\n            .finally(() => {\r\n            clearTimeout(timeout);\r\n        }));\r\n    }\r\n    getRequestClient() {\r\n        return { fetch: this.fetch };\r\n    }\r\n    shouldRetry(response) {\r\n        // Note this is not a standard header.\r\n        const shouldRetryHeader = response.headers.get('x-should-retry');\r\n        // If the server explicitly says whether or not to retry, obey.\r\n        if (shouldRetryHeader === 'true')\r\n            return true;\r\n        if (shouldRetryHeader === 'false')\r\n            return false;\r\n        // Retry on request timeouts.\r\n        if (response.status === 408)\r\n            return true;\r\n        // Retry on lock timeouts.\r\n        if (response.status === 409)\r\n            return true;\r\n        // Retry on rate limits.\r\n        if (response.status === 429)\r\n            return true;\r\n        // Retry internal errors.\r\n        if (response.status >= 500)\r\n            return true;\r\n        return false;\r\n    }\r\n    async retryRequest(options, retriesRemaining, responseHeaders) {\r\n        retriesRemaining -= 1;\r\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\r\n        let timeoutMillis;\r\n        const retryAfterHeader = responseHeaders?.['retry-after'];\r\n        if (retryAfterHeader) {\r\n            const timeoutSeconds = parseInt(retryAfterHeader);\r\n            if (!Number.isNaN(timeoutSeconds)) {\r\n                timeoutMillis = timeoutSeconds * 1000;\r\n            }\r\n            else {\r\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\r\n            }\r\n        }\r\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\r\n        // just do what it says, but otherwise calculate a default\r\n        if (!timeoutMillis ||\r\n            !Number.isInteger(timeoutMillis) ||\r\n            timeoutMillis <= 0 ||\r\n            timeoutMillis > 60 * 1000) {\r\n            const maxRetries = options.maxRetries ?? this.maxRetries;\r\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\r\n        }\r\n        await sleep(timeoutMillis);\r\n        return this.makeRequest(options, retriesRemaining);\r\n    }\r\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\r\n        const initialRetryDelay = 0.5;\r\n        const maxRetryDelay = 2;\r\n        const numRetries = maxRetries - retriesRemaining;\r\n        // Apply exponential backoff, but not more than the max.\r\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\r\n        // Apply some jitter, plus-or-minus half a second.\r\n        const jitter = Math.random() - 0.5;\r\n        return (sleepSeconds + jitter) * 1000;\r\n    }\r\n    getUserAgent() {\r\n        return `${this.constructor.name}/JS ${VERSION}`;\r\n    }\r\n}\r\nexport class APIResource {\r\n    constructor(client) {\r\n        this.client = client;\r\n        this.get = client.get.bind(client);\r\n        this.post = client.post.bind(client);\r\n        this.patch = client.patch.bind(client);\r\n        this.put = client.put.bind(client);\r\n        this.delete = client.delete.bind(client);\r\n        this.getAPIList = client.getAPIList.bind(client);\r\n    }\r\n}\r\nexport class AbstractPage {\r\n    constructor(client, response, body, options) {\r\n        _AbstractPage_client.set(this, void 0);\r\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\r\n        this.options = options;\r\n        this.response = response;\r\n        this.body = body;\r\n    }\r\n    hasNextPage() {\r\n        const items = this.getPaginatedItems();\r\n        if (!items.length)\r\n            return false;\r\n        return this.nextPageInfo() != null;\r\n    }\r\n    async getNextPage() {\r\n        const nextInfo = this.nextPageInfo();\r\n        if (!nextInfo) {\r\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\r\n        }\r\n        const nextOptions = { ...this.options };\r\n        if ('params' in nextInfo) {\r\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\r\n        }\r\n        else if ('url' in nextInfo) {\r\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\r\n            for (const [key, value] of params) {\r\n                nextInfo.url.searchParams.set(key, value);\r\n            }\r\n            nextOptions.query = undefined;\r\n            nextOptions.path = nextInfo.url.toString();\r\n        }\r\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\r\n    }\r\n    async *iterPages() {\r\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n        let page = this;\r\n        yield page;\r\n        while (page.hasNextPage()) {\r\n            page = await page.getNextPage();\r\n            yield page;\r\n        }\r\n    }\r\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\r\n        for await (const page of this.iterPages()) {\r\n            for (const item of page.getPaginatedItems()) {\r\n                yield item;\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\r\n *\r\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\r\n *\r\n *    for await (const item of client.items.list()) {\r\n *      console.log(item)\r\n *    }\r\n */\r\nexport class PagePromise extends APIPromise {\r\n    constructor(client, request, Page) {\r\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\r\n    }\r\n    /**\r\n     * Allow auto-paginating iteration on an unawaited list call, eg:\r\n     *\r\n     *    for await (const item of client.items.list()) {\r\n     *      console.log(item)\r\n     *    }\r\n     */\r\n    async *[Symbol.asyncIterator]() {\r\n        const page = await this;\r\n        for await (const item of page) {\r\n            yield item;\r\n        }\r\n    }\r\n}\r\nexport const createResponseHeaders = (headers) => {\r\n    return new Proxy(Object.fromEntries(\r\n    // @ts-ignore\r\n    headers.entries()), {\r\n        get(target, name) {\r\n            const key = name.toString();\r\n            return target[key.toLowerCase()] || target[key];\r\n        },\r\n    });\r\n};\r\n// This is required so that we can determine if a given object matches the RequestOptions\r\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\r\n// compiler such that any missing / extraneous keys will cause an error.\r\nconst requestOptionsKeys = {\r\n    method: true,\r\n    path: true,\r\n    query: true,\r\n    body: true,\r\n    headers: true,\r\n    maxRetries: true,\r\n    stream: true,\r\n    timeout: true,\r\n    httpAgent: true,\r\n    signal: true,\r\n    idempotencyKey: true,\r\n};\r\nexport const isRequestOptions = (obj) => {\r\n    return (typeof obj === 'object' &&\r\n        obj !== null &&\r\n        !isEmptyObj(obj) &&\r\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\r\n};\r\nconst getPlatformProperties = () => {\r\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\r\n        return {\r\n            'X-Stainless-Lang': 'js',\r\n            'X-Stainless-Package-Version': VERSION,\r\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\r\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\r\n            'X-Stainless-Runtime': 'deno',\r\n            'X-Stainless-Runtime-Version': Deno.version,\r\n        };\r\n    }\r\n    if (typeof EdgeRuntime !== 'undefined') {\r\n        return {\r\n            'X-Stainless-Lang': 'js',\r\n            'X-Stainless-Package-Version': VERSION,\r\n            'X-Stainless-OS': 'Unknown',\r\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\r\n            'X-Stainless-Runtime': 'edge',\r\n            'X-Stainless-Runtime-Version': process.version,\r\n        };\r\n    }\r\n    // Check if Node.js\r\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\r\n        return {\r\n            'X-Stainless-Lang': 'js',\r\n            'X-Stainless-Package-Version': VERSION,\r\n            'X-Stainless-OS': normalizePlatform(process.platform),\r\n            'X-Stainless-Arch': normalizeArch(process.arch),\r\n            'X-Stainless-Runtime': 'node',\r\n            'X-Stainless-Runtime-Version': process.version,\r\n        };\r\n    }\r\n    const browserInfo = getBrowserInfo();\r\n    if (browserInfo) {\r\n        return {\r\n            'X-Stainless-Lang': 'js',\r\n            'X-Stainless-Package-Version': VERSION,\r\n            'X-Stainless-OS': 'Unknown',\r\n            'X-Stainless-Arch': 'unknown',\r\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\r\n            'X-Stainless-Runtime-Version': browserInfo.version,\r\n        };\r\n    }\r\n    // TODO add support for Cloudflare workers, etc.\r\n    return {\r\n        'X-Stainless-Lang': 'js',\r\n        'X-Stainless-Package-Version': VERSION,\r\n        'X-Stainless-OS': 'Unknown',\r\n        'X-Stainless-Arch': 'unknown',\r\n        'X-Stainless-Runtime': 'unknown',\r\n        'X-Stainless-Runtime-Version': 'unknown',\r\n    };\r\n};\r\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\r\nfunction getBrowserInfo() {\r\n    if (typeof navigator === 'undefined' || !navigator) {\r\n        return null;\r\n    }\r\n    // NOTE: The order matters here!\r\n    const browserPatterns = [\r\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\r\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\r\n    ];\r\n    // Find the FIRST matching browser\r\n    for (const { key, pattern } of browserPatterns) {\r\n        const match = pattern.exec(navigator.userAgent);\r\n        if (match) {\r\n            const major = match[1] || 0;\r\n            const minor = match[2] || 0;\r\n            const patch = match[3] || 0;\r\n            return { browser: key, version: `${major}.${minor}.${patch}` };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nconst normalizeArch = (arch) => {\r\n    // Node docs:\r\n    // - https://nodejs.org/api/process.html#processarch\r\n    // Deno docs:\r\n    // - https://doc.deno.land/deno/stable/~/Deno.build\r\n    if (arch === 'x32')\r\n        return 'x32';\r\n    if (arch === 'x86_64' || arch === 'x64')\r\n        return 'x64';\r\n    if (arch === 'arm')\r\n        return 'arm';\r\n    if (arch === 'aarch64' || arch === 'arm64')\r\n        return 'arm64';\r\n    if (arch)\r\n        return `other:${arch}`;\r\n    return 'unknown';\r\n};\r\nconst normalizePlatform = (platform) => {\r\n    // Node platforms:\r\n    // - https://nodejs.org/api/process.html#processplatform\r\n    // Deno platforms:\r\n    // - https://doc.deno.land/deno/stable/~/Deno.build\r\n    // - https://github.com/denoland/deno/issues/14799\r\n    platform = platform.toLowerCase();\r\n    // NOTE: this iOS check is untested and may not work\r\n    // Node does not work natively on IOS, there is a fork at\r\n    // https://github.com/nodejs-mobile/nodejs-mobile\r\n    // however it is unknown at the time of writing how to detect if it is running\r\n    if (platform.includes('ios'))\r\n        return 'iOS';\r\n    if (platform === 'android')\r\n        return 'Android';\r\n    if (platform === 'darwin')\r\n        return 'MacOS';\r\n    if (platform === 'win32')\r\n        return 'Windows';\r\n    if (platform === 'freebsd')\r\n        return 'FreeBSD';\r\n    if (platform === 'openbsd')\r\n        return 'OpenBSD';\r\n    if (platform === 'linux')\r\n        return 'Linux';\r\n    if (platform)\r\n        return `Other:${platform}`;\r\n    return 'Unknown';\r\n};\r\nlet _platformHeaders;\r\nconst getPlatformHeaders = () => {\r\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\r\n};\r\nexport const safeJSON = (text) => {\r\n    try {\r\n        return JSON.parse(text);\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n// https://stackoverflow.com/a/19709846\r\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\r\nconst isAbsoluteURL = (url) => {\r\n    return startsWithSchemeRegexp.test(url);\r\n};\r\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\nconst validatePositiveInteger = (name, n) => {\r\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\r\n        throw new OpenAIError(`${name} must be an integer`);\r\n    }\r\n    if (n < 0) {\r\n        throw new OpenAIError(`${name} must be a positive integer`);\r\n    }\r\n    return n;\r\n};\r\nexport const castToError = (err) => {\r\n    if (err instanceof Error)\r\n        return err;\r\n    return new Error(err);\r\n};\r\nexport const ensurePresent = (value) => {\r\n    if (value == null)\r\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\r\n    return value;\r\n};\r\n/**\r\n * Read an environment variable.\r\n *\r\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\r\n */\r\nexport const readEnv = (env) => {\r\n    if (typeof process !== 'undefined') {\r\n        return process.env?.[env] ?? undefined;\r\n    }\r\n    if (typeof Deno !== 'undefined') {\r\n        return Deno.env?.get?.(env);\r\n    }\r\n    return undefined;\r\n};\r\nexport const coerceInteger = (value) => {\r\n    if (typeof value === 'number')\r\n        return Math.round(value);\r\n    if (typeof value === 'string')\r\n        return parseInt(value, 10);\r\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\r\n};\r\nexport const coerceFloat = (value) => {\r\n    if (typeof value === 'number')\r\n        return value;\r\n    if (typeof value === 'string')\r\n        return parseFloat(value);\r\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\r\n};\r\nexport const coerceBoolean = (value) => {\r\n    if (typeof value === 'boolean')\r\n        return value;\r\n    if (typeof value === 'string')\r\n        return value === 'true';\r\n    return Boolean(value);\r\n};\r\nexport const maybeCoerceInteger = (value) => {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    return coerceInteger(value);\r\n};\r\nexport const maybeCoerceFloat = (value) => {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    return coerceFloat(value);\r\n};\r\nexport const maybeCoerceBoolean = (value) => {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    return coerceBoolean(value);\r\n};\r\n// https://stackoverflow.com/a/34491287\r\nexport function isEmptyObj(obj) {\r\n    if (!obj)\r\n        return true;\r\n    for (const _k in obj)\r\n        return false;\r\n    return true;\r\n}\r\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\r\nexport function hasOwn(obj, key) {\r\n    return Object.prototype.hasOwnProperty.call(obj, key);\r\n}\r\nexport function debug(action, ...args) {\r\n    if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\r\n        console.log(`OpenAI:DEBUG:${action}`, ...args);\r\n    }\r\n}\r\n/**\r\n * https://stackoverflow.com/a/2117523\r\n */\r\nconst uuid4 = () => {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n        const r = (Math.random() * 16) | 0;\r\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n};\r\nexport const isRunningInBrowser = () => {\r\n    return (\r\n    // @ts-ignore\r\n    typeof window !== 'undefined' &&\r\n        // @ts-ignore\r\n        typeof window.document !== 'undefined' &&\r\n        // @ts-ignore\r\n        typeof navigator !== 'undefined');\r\n};\r\nexport const isHeadersProtocol = (headers) => {\r\n    return typeof headers?.get === 'function';\r\n};\r\nexport const getHeader = (headers, key) => {\r\n    const lowerKey = key.toLowerCase();\r\n    if (isHeadersProtocol(headers))\r\n        return headers.get(key) || headers.get(lowerKey);\r\n    const value = headers[key] || headers[lowerKey];\r\n    if (Array.isArray(value)) {\r\n        if (value.length <= 1)\r\n            return value[0];\r\n        console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\r\n        return value[0];\r\n    }\r\n    return value;\r\n};\r\n/**\r\n * Encodes a string to Base64 format.\r\n */\r\nexport const toBase64 = (str) => {\r\n    if (!str)\r\n        return '';\r\n    if (typeof Buffer !== 'undefined') {\r\n        return Buffer.from(str).toString('base64');\r\n    }\r\n    if (typeof btoa !== 'undefined') {\r\n        return btoa(str);\r\n    }\r\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\r\n};\r\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { AbstractPage } from \"./core.mjs\";\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class Page extends AbstractPage {\r\n    constructor(client, response, body, options) {\r\n        super(client, response, body, options);\r\n        this.data = body.data;\r\n        this.object = body.object;\r\n    }\r\n    getPaginatedItems() {\r\n        return this.data;\r\n    }\r\n    // @deprecated Please use `nextPageInfo()` instead\r\n    /**\r\n     * This page represents a response that isn't actually paginated at the API level\r\n     * so there will never be any next page params.\r\n     */\r\n    nextPageParams() {\r\n        return null;\r\n    }\r\n    nextPageInfo() {\r\n        return null;\r\n    }\r\n}\r\nexport class CursorPage extends AbstractPage {\r\n    constructor(client, response, body, options) {\r\n        super(client, response, body, options);\r\n        this.data = body.data;\r\n    }\r\n    getPaginatedItems() {\r\n        return this.data;\r\n    }\r\n    // @deprecated Please use `nextPageInfo()` instead\r\n    nextPageParams() {\r\n        const info = this.nextPageInfo();\r\n        if (!info)\r\n            return null;\r\n        if ('params' in info)\r\n            return info.params;\r\n        const params = Object.fromEntries(info.url.searchParams);\r\n        if (!Object.keys(params).length)\r\n            return null;\r\n        return params;\r\n    }\r\n    nextPageInfo() {\r\n        if (!this.data?.length) {\r\n            return null;\r\n        }\r\n        const next = this.data[this.data.length - 1]?.id;\r\n        if (!next)\r\n            return null;\r\n        return { params: { after: next } };\r\n    }\r\n}\r\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nexport class APIResource {\r\n    constructor(client) {\r\n        this.client = client;\r\n        this.get = client.get.bind(client);\r\n        this.post = client.post.bind(client);\r\n        this.patch = client.patch.bind(client);\r\n        this.put = client.put.bind(client);\r\n        this.delete = client.delete.bind(client);\r\n        this.getAPIList = client.getAPIList.bind(client);\r\n    }\r\n}\r\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nexport class Completions extends APIResource {\r\n    create(body, options) {\r\n        return this.post('/completions', { body, ...options, stream: body.stream ?? false });\r\n    }\r\n}\r\n(function (Completions) {\r\n})(Completions || (Completions = {}));\r\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nexport class Completions extends APIResource {\r\n    create(body, options) {\r\n        return this.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\r\n    }\r\n}\r\n(function (Completions) {\r\n})(Completions || (Completions = {}));\r\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport * as CompletionsAPI from 'openai/resources/chat/completions';\r\nexport class Chat extends APIResource {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.completions = new CompletionsAPI.Completions(this.client);\r\n    }\r\n}\r\n(function (Chat) {\r\n    Chat.Completions = CompletionsAPI.Completions;\r\n})(Chat || (Chat = {}));\r\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nexport class Edits extends APIResource {\r\n    /**\r\n     * Creates a new edit for the provided input, instruction, and parameters.\r\n     *\r\n     * @deprecated The Edits API is deprecated; please use Chat Completions instead.\r\n     *\r\n     * https://openai.com/blog/gpt-4-api-general-availability#deprecation-of-the-edits-api\r\n     */\r\n    create(body, options) {\r\n        return this.post('/edits', { body, ...options });\r\n    }\r\n}\r\n(function (Edits) {\r\n})(Edits || (Edits = {}));\r\n//# sourceMappingURL=edits.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nexport class Embeddings extends APIResource {\r\n    /**\r\n     * Creates an embedding vector representing the input text.\r\n     */\r\n    create(body, options) {\r\n        return this.post('/embeddings', { body, ...options });\r\n    }\r\n}\r\n(function (Embeddings) {\r\n})(Embeddings || (Embeddings = {}));\r\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport { sleep } from 'openai/core';\r\nimport { APIConnectionTimeoutError } from 'openai/error';\r\nimport * as FilesAPI from 'openai/resources/files';\r\nimport { multipartFormRequestOptions } from 'openai/core';\r\nimport { Page } from 'openai/pagination';\r\nexport class Files extends APIResource {\r\n    /**\r\n     * Upload a file that can be used across various endpoints/features. Currently, the\r\n     * size of all the files uploaded by one organization can be up to 1 GB. Please\r\n     * [contact us](https://help.openai.com/) if you need to increase the storage\r\n     * limit.\r\n     */\r\n    create(body, options) {\r\n        return this.post('/files', multipartFormRequestOptions({ body, ...options }));\r\n    }\r\n    /**\r\n     * Returns information about a specific file.\r\n     */\r\n    retrieve(fileId, options) {\r\n        return this.get(`/files/${fileId}`, options);\r\n    }\r\n    /**\r\n     * Returns a list of files that belong to the user's organization.\r\n     */\r\n    list(options) {\r\n        return this.getAPIList('/files', FileObjectsPage, options);\r\n    }\r\n    /**\r\n     * Delete a file.\r\n     */\r\n    del(fileId, options) {\r\n        return this.delete(`/files/${fileId}`, options);\r\n    }\r\n    /**\r\n     * Returns the contents of the specified file.\r\n     */\r\n    retrieveContent(fileId, options) {\r\n        return this.get(`/files/${fileId}/content`, {\r\n            ...options,\r\n            headers: { Accept: 'application/json', ...options?.headers },\r\n        });\r\n    }\r\n    /**\r\n     * Waits for the given file to be processed, default timeout is 30 mins.\r\n     */\r\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\r\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\r\n        const start = Date.now();\r\n        let file = await this.retrieve(id);\r\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\r\n            await sleep(pollInterval);\r\n            file = await this.retrieve(id);\r\n            if (Date.now() - start > maxWait) {\r\n                throw new APIConnectionTimeoutError({\r\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\r\n                });\r\n            }\r\n        }\r\n        return file;\r\n    }\r\n}\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class FileObjectsPage extends Page {\r\n}\r\n(function (Files) {\r\n    Files.FileObjectsPage = FilesAPI.FileObjectsPage;\r\n})(Files || (Files = {}));\r\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport { multipartFormRequestOptions } from 'openai/core';\r\nexport class Images extends APIResource {\r\n    /**\r\n     * Creates a variation of a given image.\r\n     */\r\n    createVariation(body, options) {\r\n        return this.post('/images/variations', multipartFormRequestOptions({ body, ...options }));\r\n    }\r\n    /**\r\n     * Creates an edited or extended image given an original image and a prompt.\r\n     */\r\n    edit(body, options) {\r\n        return this.post('/images/edits', multipartFormRequestOptions({ body, ...options }));\r\n    }\r\n    /**\r\n     * Creates an image given a prompt.\r\n     */\r\n    generate(body, options) {\r\n        return this.post('/images/generations', { body, ...options });\r\n    }\r\n}\r\n(function (Images) {\r\n})(Images || (Images = {}));\r\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport { multipartFormRequestOptions } from 'openai/core';\r\nexport class Transcriptions extends APIResource {\r\n    /**\r\n     * Transcribes audio into the input language.\r\n     */\r\n    create(body, options) {\r\n        return this.post('/audio/transcriptions', multipartFormRequestOptions({ body, ...options }));\r\n    }\r\n}\r\n(function (Transcriptions) {\r\n})(Transcriptions || (Transcriptions = {}));\r\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport { multipartFormRequestOptions } from 'openai/core';\r\nexport class Translations extends APIResource {\r\n    /**\r\n     * Translates audio into English.\r\n     */\r\n    create(body, options) {\r\n        return this.post('/audio/translations', multipartFormRequestOptions({ body, ...options }));\r\n    }\r\n}\r\n(function (Translations) {\r\n})(Translations || (Translations = {}));\r\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport * as TranscriptionsAPI from 'openai/resources/audio/transcriptions';\r\nimport * as TranslationsAPI from 'openai/resources/audio/translations';\r\nexport class Audio extends APIResource {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this.client);\r\n        this.translations = new TranslationsAPI.Translations(this.client);\r\n    }\r\n}\r\n(function (Audio) {\r\n    Audio.Transcriptions = TranscriptionsAPI.Transcriptions;\r\n    Audio.Translations = TranslationsAPI.Translations;\r\n})(Audio || (Audio = {}));\r\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nexport class Moderations extends APIResource {\r\n    /**\r\n     * Classifies if text violates OpenAI's Content Policy\r\n     */\r\n    create(body, options) {\r\n        return this.post('/moderations', { body, ...options });\r\n    }\r\n}\r\n(function (Moderations) {\r\n})(Moderations || (Moderations = {}));\r\n//# sourceMappingURL=moderations.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport * as ModelsAPI from 'openai/resources/models';\r\nimport { Page } from 'openai/pagination';\r\nexport class Models extends APIResource {\r\n    /**\r\n     * Retrieves a model instance, providing basic information about the model such as\r\n     * the owner and permissioning.\r\n     */\r\n    retrieve(model, options) {\r\n        return this.get(`/models/${model}`, options);\r\n    }\r\n    /**\r\n     * Lists the currently available models, and provides basic information about each\r\n     * one such as the owner and availability.\r\n     */\r\n    list(options) {\r\n        return this.getAPIList('/models', ModelsPage, options);\r\n    }\r\n    /**\r\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\r\n     * delete a model.\r\n     */\r\n    del(model, options) {\r\n        return this.delete(`/models/${model}`, options);\r\n    }\r\n}\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class ModelsPage extends Page {\r\n}\r\n(function (Models) {\r\n    Models.ModelsPage = ModelsAPI.ModelsPage;\r\n})(Models || (Models = {}));\r\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport { isRequestOptions } from 'openai/core';\r\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs';\r\nimport { CursorPage } from 'openai/pagination';\r\nexport class Jobs extends APIResource {\r\n    /**\r\n     * Creates a job that fine-tunes a specified model from a given dataset.\r\n     *\r\n     * Response includes details of the enqueued job including job status and the name\r\n     * of the fine-tuned models once complete.\r\n     *\r\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\r\n     */\r\n    create(body, options) {\r\n        return this.post('/fine_tuning/jobs', { body, ...options });\r\n    }\r\n    /**\r\n     * Get info about a fine-tuning job.\r\n     *\r\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\r\n     */\r\n    retrieve(fineTuningJobId, options) {\r\n        return this.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\r\n    }\r\n    list(query = {}, options) {\r\n        if (isRequestOptions(query)) {\r\n            return this.list({}, query);\r\n        }\r\n        return this.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\r\n    }\r\n    /**\r\n     * Immediately cancel a fine-tune job.\r\n     */\r\n    cancel(fineTuningJobId, options) {\r\n        return this.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\r\n    }\r\n    listEvents(fineTuningJobId, query = {}, options) {\r\n        if (isRequestOptions(query)) {\r\n            return this.listEvents(fineTuningJobId, {}, query);\r\n        }\r\n        return this.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\r\n            query,\r\n            ...options,\r\n        });\r\n    }\r\n}\r\nexport class FineTuningJobsPage extends CursorPage {\r\n}\r\nexport class FineTuningJobEventsPage extends CursorPage {\r\n}\r\n(function (Jobs) {\r\n    Jobs.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\r\n    Jobs.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\r\n})(Jobs || (Jobs = {}));\r\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport * as JobsAPI from 'openai/resources/fine-tuning/jobs';\r\nexport class FineTuning extends APIResource {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.jobs = new JobsAPI.Jobs(this.client);\r\n    }\r\n}\r\n(function (FineTuning) {\r\n    FineTuning.Jobs = JobsAPI.Jobs;\r\n    FineTuning.FineTuningJobsPage = JobsAPI.FineTuningJobsPage;\r\n    FineTuning.FineTuningJobEventsPage = JobsAPI.FineTuningJobEventsPage;\r\n})(FineTuning || (FineTuning = {}));\r\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nimport { APIResource } from 'openai/resource';\r\nimport * as FineTunesAPI from 'openai/resources/fine-tunes';\r\nimport { Page } from 'openai/pagination';\r\nexport class FineTunes extends APIResource {\r\n    /**\r\n     * Creates a job that fine-tunes a specified model from a given dataset.\r\n     *\r\n     * Response includes details of the enqueued job including job status and the name\r\n     * of the fine-tuned models once complete.\r\n     *\r\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/legacy-fine-tuning)\r\n     */\r\n    create(body, options) {\r\n        return this.post('/fine-tunes', { body, ...options });\r\n    }\r\n    /**\r\n     * Gets info about the fine-tune job.\r\n     *\r\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/legacy-fine-tuning)\r\n     */\r\n    retrieve(fineTuneId, options) {\r\n        return this.get(`/fine-tunes/${fineTuneId}`, options);\r\n    }\r\n    /**\r\n     * List your organization's fine-tuning jobs\r\n     */\r\n    list(options) {\r\n        return this.getAPIList('/fine-tunes', FineTunesPage, options);\r\n    }\r\n    /**\r\n     * Immediately cancel a fine-tune job.\r\n     */\r\n    cancel(fineTuneId, options) {\r\n        return this.post(`/fine-tunes/${fineTuneId}/cancel`, options);\r\n    }\r\n    listEvents(fineTuneId, query, options) {\r\n        return this.get(`/fine-tunes/${fineTuneId}/events`, {\r\n            query,\r\n            timeout: 86400000,\r\n            ...options,\r\n            stream: query?.stream ?? false,\r\n        });\r\n    }\r\n}\r\n/**\r\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\r\n */\r\nexport class FineTunesPage extends Page {\r\n}\r\n(function (FineTunes) {\r\n    FineTunes.FineTunesPage = FineTunesAPI.FineTunesPage;\r\n})(FineTunes || (FineTunes = {}));\r\n//# sourceMappingURL=fine-tunes.mjs.map","// File generated from our OpenAPI spec by Stainless.\r\nvar _a;\r\nimport * as Core from \"./core.mjs\";\r\nimport * as Pagination from \"./pagination.mjs\";\r\nimport * as Errors from \"./error.mjs\";\r\nimport * as Uploads from \"./uploads.mjs\";\r\nimport * as API from 'openai/resources/index';\r\n/** API Client for interfacing with the OpenAI API. */\r\nexport class OpenAI extends Core.APIClient {\r\n    /**\r\n     * API Client for interfacing with the OpenAI API.\r\n     *\r\n     * @param {string} [opts.apiKey=process.env['OPENAI_API_KEY']] - The API Key to send to the API.\r\n     * @param {string} [opts.baseURL] - Override the default base URL for the API.\r\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\r\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\r\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\r\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\r\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\r\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\r\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\r\n     * @param {string | null} [opts.organization]\r\n     */\r\n    constructor({ apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, ...opts } = {}) {\r\n        if (apiKey === undefined) {\r\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'my apiKey' }).\");\r\n        }\r\n        const options = {\r\n            apiKey,\r\n            organization,\r\n            ...opts,\r\n            baseURL: opts.baseURL ?? `https://api.openai.com/v1`,\r\n        };\r\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\r\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\r\n        }\r\n        super({\r\n            baseURL: options.baseURL,\r\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\r\n            httpAgent: options.httpAgent,\r\n            maxRetries: options.maxRetries,\r\n            fetch: options.fetch,\r\n        });\r\n        this.completions = new API.Completions(this);\r\n        this.chat = new API.Chat(this);\r\n        this.edits = new API.Edits(this);\r\n        this.embeddings = new API.Embeddings(this);\r\n        this.files = new API.Files(this);\r\n        this.images = new API.Images(this);\r\n        this.audio = new API.Audio(this);\r\n        this.moderations = new API.Moderations(this);\r\n        this.models = new API.Models(this);\r\n        this.fineTuning = new API.FineTuning(this);\r\n        this.fineTunes = new API.FineTunes(this);\r\n        this._options = options;\r\n        this.apiKey = apiKey;\r\n        this.organization = organization;\r\n    }\r\n    defaultQuery() {\r\n        return this._options.defaultQuery;\r\n    }\r\n    defaultHeaders(opts) {\r\n        return {\r\n            ...super.defaultHeaders(opts),\r\n            'OpenAI-Organization': this.organization,\r\n            ...this._options.defaultHeaders,\r\n        };\r\n    }\r\n    authHeaders(opts) {\r\n        return { Authorization: `Bearer ${this.apiKey}` };\r\n    }\r\n}\r\n_a = OpenAI;\r\nOpenAI.OpenAI = _a;\r\nOpenAI.OpenAIError = Errors.OpenAIError;\r\nOpenAI.APIError = Errors.APIError;\r\nOpenAI.APIConnectionError = Errors.APIConnectionError;\r\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\r\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\r\nOpenAI.NotFoundError = Errors.NotFoundError;\r\nOpenAI.ConflictError = Errors.ConflictError;\r\nOpenAI.RateLimitError = Errors.RateLimitError;\r\nOpenAI.BadRequestError = Errors.BadRequestError;\r\nOpenAI.AuthenticationError = Errors.AuthenticationError;\r\nOpenAI.InternalServerError = Errors.InternalServerError;\r\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\r\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\r\nexport const { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } = Errors;\r\nexport var toFile = Uploads.toFile;\r\nexport var fileFromPath = Uploads.fileFromPath;\r\n(function (OpenAI) {\r\n    // Helper functions\r\n    OpenAI.toFile = Uploads.toFile;\r\n    OpenAI.fileFromPath = Uploads.fileFromPath;\r\n    OpenAI.Page = Pagination.Page;\r\n    OpenAI.CursorPage = Pagination.CursorPage;\r\n    OpenAI.Completions = API.Completions;\r\n    OpenAI.Chat = API.Chat;\r\n    OpenAI.Edits = API.Edits;\r\n    OpenAI.Embeddings = API.Embeddings;\r\n    OpenAI.Files = API.Files;\r\n    OpenAI.FileObjectsPage = API.FileObjectsPage;\r\n    OpenAI.Images = API.Images;\r\n    OpenAI.Audio = API.Audio;\r\n    OpenAI.Moderations = API.Moderations;\r\n    OpenAI.Models = API.Models;\r\n    OpenAI.ModelsPage = API.ModelsPage;\r\n    OpenAI.FineTuning = API.FineTuning;\r\n    OpenAI.FineTunes = API.FineTunes;\r\n    OpenAI.FineTunesPage = API.FineTunesPage;\r\n})(OpenAI || (OpenAI = {}));\r\nexport default OpenAI;\r\n//# sourceMappingURL=index.mjs.map","import OpenAI from 'openai';\r\n\r\nconst openai = new OpenAI({\r\n  apiKey: process.env.API_KEY,\r\n  dangerouslyAllowBrowser: true,\r\n});\r\n/*\r\nfunction CreateOverlayBox() {\r\n  console.log(\"made it to overlay box\")\r\n  const overlay = document.createElement('div');\r\n  overlay.id = 'custom-overlay';\r\n  overlay.style.position = 'fixed';\r\n  overlay.style.top = '0';\r\n  overlay.style.left = '0';\r\n  overlay.style.width = '100%';\r\n  overlay.style.height = '100%';\r\n  overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\r\n  overlay.style.zIndex = '9999';\r\n  overlay.style.display = 'flex';\r\n  overlay.style.justifyContent = 'center';\r\n  overlay.style.alignItems = 'center';\r\n\r\n  document.body.appendChild(overlay);\r\n}\r\nchrome.runtime.onConnect.addListener(function(port) {\r\n  port.onMessage.addListener(function(message) {\r\n    if (message.action === 'createOverlay') {\r\n      createOverlayBox();\r\n    }\r\n  });\r\n});\r\n*/\r\nconst paragraphArray = [];\r\n\r\nfunction getText() {\r\n  chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\r\n    const tab = tabs[0];\r\n    const tabURL = tab.url;\r\n\r\n    fetch(tabURL)\r\n      .then((response) => response.text())\r\n      .then((html) => {\r\n        parseHTML(html);\r\n      });\r\n\r\n    function parseHTML(html) {\r\n      const parser = new DOMParser();\r\n      const doc = parser.parseFromString(html, 'text/html');\r\n\r\n      const paragraphs = doc.querySelectorAll('p, td, ul, div, h1, h2, h3');\r\n\r\n      paragraphs.forEach((paragraph) => {\r\n        paragraphArray.push(paragraph.textContent);\r\n      });\r\n\r\n      // Send the paragraphs to the OpenAI API for summarization\r\n      let textToSummarize = \"Please provide a concise summary of the core information of the following, ignore any links provided you are acting as a summary tool in a browser extension: \" + paragraphArray.join('\\n'); // Concatenate paragraphs\r\n\r\n      // Check if the text exceeds the model's maximum token limit (4096 tokens for gpt-3.5-turbo)\r\n      if (textToSummarize.split(' ').length > 4096) {\r\n        // If it's too long, truncate it while preserving meaningful content\r\n        const maxTokens = 4096; // Max tokens for gpt-3.5-turbo\r\n        const textArray = textToSummarize.split(' ');\r\n        textToSummarize = textArray.slice(0, maxTokens).join(' ');\r\n      }\r\n      console.log(textToSummarize);\r\n      // Use the OpenAI Chat Completions API to generate a summary\r\n      generateSummary(textToSummarize);\r\n    }\r\n  });\r\n}\r\n\r\nasync function generateSummary(text) {\r\n  try {\r\n    const response = await openai.chat.completions.create({\r\n      model: 'gpt-4-1106-preview',\r\n      messages: [\r\n        { role: 'system', content: 'You are a helpful assistant.' },\r\n        { role: 'user', content: text },\r\n      ],\r\n      max_tokens: 2000,\r\n    });\r\n\r\n    console.log(response)\r\n\r\n    if (response.hasOwnProperty('choices') && response.choices.length > 0) {\r\n      const summary = response.choices[0].message.content;\r\n      const summaryElement = document.getElementById(\"summary\");\r\n      console.log(summary);\r\n      if (summaryElement) {\r\n        summaryElement.textContent = summary; // Update the 'summary' element with the generated summary\r\n      } else {\r\n        console.error('Element with ID \"summary\" not found.');\r\n      }\r\n    } else if (response.hasOwnProperty('error')) {\r\n      console.error('Error from OpenAI API:', response.error.message);\r\n    }\r\n  } catch (error) {\r\n    console.error('Error generating summary: ', error);\r\n  }\r\n}\r\n\r\ndocument.getElementById('myButton').addEventListener('click', getText);\r\ndocument.getElementById('x').addEventListener('click', closeElement);\r\n\r\nfunction closeElement() {\r\n  const element = document.getElementById('x');\r\n  element.style.display = 'none';\r\n  window.close();\r\n}\r\n\r\n\r\n//Button to copy text to clipboard \r\ndocument.getElementById('copyButton').addEventListener('click', function () {\r\n  // Get the text content from the 'summary' element\r\n  var summaryText = document.getElementById('summary').innerText;\r\n\r\n  var tempTextarea = document.createElement('textarea');\r\n  tempTextarea.value = summaryText;\r\n\r\n  document.body.appendChild(tempTextarea);\r\n\r\n  // Select and copy the text to the clipboard\r\n  tempTextarea.select();\r\n  document.execCommand('copy');\r\n\r\n  document.body.removeChild(tempTextarea);\r\n\r\n  alert('Text copied to clipboard!');\r\n});"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","VERSION","Error","APIError","constructor","status","error","message","headers","super","makeMessage","this","data","code","param","type","JSON","stringify","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","arguments","Stream","response","controller","decoder","SSEDecoder","iterMessages","body","abort","lineDecoder","LineDecoder","iter","stream","asyncIterator","reader","getReader","next","result","read","done","releaseLock","e","cancelPromise","cancel","readableStreamAsyncIterable","chunk","line","decode","sse","flush","startsWith","event","parse","console","raw","name","chunks","endsWith","substring","length","join","push","fieldname","_","str","delimiter","index","indexOf","partition","buffer","trailingCR","text","decodeText","slice","trailingNewline","NEWLINE_CHARS","has","lines","split","NEWLINE_REGEXP","pop","bytes","Buffer","toString","Uint8Array","from","TextDecoder","ArrayBuffer","textDecoder","Set","kind","getDefaultAgent","fileFromPath","isFsReadStream","auto","MultipartBody","shims","options","fetch","Request","Response","Headers","FormData","Blob","File","getMultipartRequestOptions","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","async","form","opts","url","isResponseLike","blob","isBlobLike","size","arrayBuffer","toFile","URL","pathname","bits","parts","isView","isAsyncIterableIterator","getOwnPropertyNames","map","p","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","x","String","isMultipartBody","multipartFormRequestOptions","createForm","Promise","all","entries","addFormValue","TypeError","append","lastModified","isFileLike","isUploadable","file","Array","isArray","entry","_AbstractPage_client","defaultParseResponse","props","contentType","includes","json","debug","APIPromise","responsePromise","parseResponse","resolve","_thenUnwrap","transform","asResponse","then","withResponse","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","timeout","httpAgent","overridenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","patch","put","method","request","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","TextEncoder","encode","buildRequest","query","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","keys","forEach","req","agent","signal","prepareRequest","parseHeaders","iterator","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","createResponseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","search","stringifyQuery","filter","encodeURIComponent","init","ms","addEventListener","setTimeout","getRequestClient","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterHeader","timeoutSeconds","parseInt","Number","isNaN","Date","now","isInteger","calculateDefaultRetryTimeoutMillis","sleep","numRetries","Math","min","pow","random","AbstractPage","client","set","receiver","state","f","__classPrivateFieldSet","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","__classPrivateFieldGet","iterPages","page","WeakMap","item","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","every","k","hasOwn","normalizeArch","arch","normalizePlatform","platform","_platformHeaders","Deno","build","os","version","EdgeRuntime","process","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","browser","getBrowserInfo","getPlatformProperties","err","startsWithSchemeRegexp","RegExp","test","n","readEnv","env","_k","action","args","log","replace","c","r","object","nextPageParams","CursorPage","info","id","after","bind","delete","Completions","create","Chat","completions","Edits","Embeddings","Files","retrieve","fileId","list","FileObjectsPage","del","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","start","Images","createVariation","edit","Transcriptions","Translations","Audio","transcriptions","translations","Moderations","Models","model","ModelsPage","Jobs","fineTuningJobId","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","FineTuning","jobs","FineTunes","fineTuneId","FineTunesPage","_a","OpenAI","apiKey","organization","dangerouslyAllowBrowser","window","document","chat","edits","embeddings","files","images","audio","moderations","models","fineTuning","fineTunes","_options","Authorization","OpenAIError","_regeneratorRuntime","t","i","a","u","define","configurable","writable","wrap","Generator","Context","makeInvokeMethod","tryCatch","arg","h","l","s","y","GeneratorFunction","GeneratorFunctionPrototype","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","_typeof","__await","callInvokeWithMethodAndArg","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","reverse","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","openai","paragraphArray","_generateSummary","fn","_callee","summary","summaryElement","_context","messages","role","content","max_tokens","choices","getElementById","textContent","t0","self","apply","chrome","tabs","active","currentWindow","tabURL","html","DOMParser","parseFromString","querySelectorAll","paragraph","textToSummarize","textArray","_x","generateSummary","parseHTML","style","display","close","summaryText","innerText","tempTextarea","createElement","appendChild","select","execCommand","removeChild","alert"],"sourceRoot":""}